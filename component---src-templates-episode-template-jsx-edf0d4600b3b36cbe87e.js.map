{"version":3,"sources":["webpack:///component---src-templates-episode-template-jsx-edf0d4600b3b36cbe87e.js","webpack:///./gatsby-config.js?7f6c","webpack:///./~/linkifyjs/html.js","webpack:///./~/linkifyjs/lib/linkify-html.js","webpack:///./~/linkifyjs/lib/linkify.js","webpack:///./~/linkifyjs/lib/linkify/core/parser.js","webpack:///./~/linkifyjs/lib/linkify/core/scanner.js","webpack:///./~/linkifyjs/lib/linkify/core/state.js","webpack:///./~/linkifyjs/lib/linkify/core/tokens/create-token-class.js","webpack:///./~/linkifyjs/lib/linkify/core/tokens/multi.js","webpack:///./~/linkifyjs/lib/linkify/core/tokens/text.js","webpack:///./~/linkifyjs/lib/linkify/utils/class.js","webpack:///./~/linkifyjs/lib/linkify/utils/options.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/entity-parser.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/evented-tokenizer.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/html5-named-char-refs.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/tokenize.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/tokenizer.js","webpack:///./~/linkifyjs/lib/simple-html-tokenizer/utils.js","webpack:///./~/react-audioplayer/lib/index.js","webpack:///./~/react-disqus-comments/build/components/DisqusThread.js?544a","webpack:///./~/react-disqus-comments/build/main.js?feac","webpack:///./~/slugify/index.js","webpack:///./src/components/Disqus/Disqus.jsx?ed6a","webpack:///./src/components/EpisodeTemplateDetails/index.jsx","webpack:///./src/templates/episode-template.jsx"],"names":["webpackJsonp","78","module","exports","__dirname","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","siteMetadata","url","title","subtitle","copyright","disqusShortname","menu","label","path","author","name","email","telegram","twitter","github","rss","vk","ivoox","itunes","pathPrefix","plugins","resolve","options","feedURL","trackingId","query","feeds","serialize","_ref","_ref$query","site","allMarkdownRemark","edges","map","edge","node","frontmatter","description","date","fields","slug","guid","custom_elements","content:encoded","html","output","maxWidth","wrapperStyle","fonts","_ref2","allSitePage","changefreq","priority","170","__webpack_require__","default","421","_interopRequireWildcard","obj","__esModule","newObj","_interopRequireDefault","linkifyHtml","str","opts","undefined","tokens","_simpleHtmlTokenizer2","tokenize","linkifiedTokens","linkified","Options","token","type","StartTag","Chars","linkifedChars","linkifyChars","chars","push","apply","tagName","toUpperCase","isIgnored","contains","ignoreTags","preskipLen","skipTagTokens","_token","link","attributes","attrs","attrsToStrings","join","EndTag","escapeText","Comment","linkify","result","nl2br","selfClosing","isLink","check","_opts$resolve","formatted","href","formattedHref","className","attributeArray","attr","toString","skippedTokens","stackCount","text","escapeAttr","replace","attrStrs","_attrs$i","value","_simpleHtmlTokenizer","_linkify","422","test","scanner","parser","inherits","find","_class","_options","_scanner","_parser","Array","isArray","arg","run","filtered","toObject","423","start","TOKENS","State","_state","_text","_multi","MULTI_TOKENS","makeState","tokenClass","TokenState","S_START","S_PROTOCOL","S_MAILTO","S_PROTOCOL_SLASH","S_PROTOCOL_SLASH_SLASH","S_DOMAIN","S_DOMAIN_DOT","S_TLD","URL","S_TLD_COLON","S_TLD_PORT","S_URL","S_URL_NON_ACCEPTING","S_URL_OPENBRACE","S_URL_OPENBRACKET","S_URL_OPENANGLEBRACKET","S_URL_OPENPAREN","S_URL_OPENBRACE_Q","S_URL_OPENBRACKET_Q","S_URL_OPENANGLEBRACKET_Q","S_URL_OPENPAREN_Q","S_URL_OPENBRACE_SYMS","S_URL_OPENBRACKET_SYMS","S_URL_OPENANGLEBRACKET_SYMS","S_URL_OPENPAREN_SYMS","S_EMAIL_DOMAIN","S_EMAIL_DOMAIN_DOT","S_EMAIL","EMAIL","S_EMAIL_COLON","S_EMAIL_PORT","S_MAILTO_EMAIL","MAILTOEMAIL","S_MAILTO_EMAIL_NON_ACCEPTING","S_LOCALPART","S_LOCALPART_AT","S_LOCALPART_DOT","S_NL","NL","on","PROTOCOL","MAILTO","SLASH","TLD","DOMAIN","LOCALHOST","NUM","DOT","COLON","qsAccepting","AT","PLUS","POUND","UNDERSCORE","SYM","AMPERSAND","qsNonAccepting","QUERY","PUNCTUATION","CLOSEBRACE","CLOSEBRACKET","CLOSEANGLEBRACKET","CLOSEPAREN","OPENBRACE","OPENBRACKET","OPENANGLEBRACKET","OPENPAREN","localpartAccepting","len","cursor","multis","textTokens","state","secondState","nextState","multiLength","latestAccepting","sinceAccepts","next","accepts","TEXT","MULTI","emit","slice","424","tlds","split","NUMBERS","ALPHANUM","WHITESPACE","domainStates","CharacterState","S_NUM","S_DOMAIN_HYPHEN","S_WS","WS","newStates","stateify","partialProtocolFileStates","partialProtocolFtpStates","partialProtocolHttpStates","partialProtocolMailtoStates","S_PROTOCOL_FILE","pop","S_PROTOCOL_FTP","S_PROTOCOL_HTTP","S_PROTOCOL_SECURE","S_FULL_PROTOCOL","S_FULL_MAILTO","partialLocalhostStates","_i","defaultTransition","lowerStr","c","toLowerCase","tokenLength","TOKEN","substr","171","createStateClass","tClass","this","j","T","endToken","defaultToken","BaseState","symbol","item","jump","character","charOrRegExp","RegExp","constructor","172","createTokenClass","v","425","isDomainToken","Base","_createTokenClass","MultiToken","toHref","protocol","hasProtocol","hasSlashSlash","101","inheritsToken","props","TextToken","67","parent","child","extended","create","p","426","defaultProtocol","defaults","events","format","formatHref","validate","linkAttributes","linkClass","ignoredTags","arr","noop","val","typeToTarget","_typeof","Symbol","iterator","get","getObject","operator","option","optionValue","427","_html5NamedCharRefs","_html5NamedCharRefs2","_entityParser","_entityParser2","_eventedTokenizer","_eventedTokenizer2","_tokenizer","_tokenizer2","_tokenize","_tokenize2","HTML5Tokenizer","HTML5NamedCharRefs","EntityParser","EventedTokenizer","Tokenizer","173","named","HEXCHARCODE","CHARCODE","NAMED","parse","entity","matches","match","174","delegate","entityParser","input","index","line","column","tagLine","tagColumn","reset","_utils","tokenizePart","tokenizeEOF","preprocessInput","states","flushData","finishData","peek","charAt","consume","char","consumeCharRef","endIndex","indexOf","count","markTagStart","tagOpen","beforeData","beginData","data","appendToData","isAlpha","beginStartTag","appendToTagName","markupDeclaration","beginComment","commentStart","finishComment","appendToCommentData","commentStartDash","comment","commentEndDash","commentEnd","isSpace","finishTag","beforeAttributeName","beginAttribute","appendToAttributeName","attributeName","beginAttributeValue","finishAttributeValue","afterAttributeName","beforeAttributeValue","appendToAttributeValue","attributeValueDoubleQuoted","attributeValueSingleQuoted","attributeValueUnquoted","afterAttributeValueQuoted","selfClosingStartTag","markTagAsSelfClosing","endTagOpen","beginEndTag","175","nbsp","428","tokenizer","176","startLine","startColumn","addLocInfo","loc","end","_currentAttribute","isQuoted","429","WSP","ALPHA","CRLF","483","Audio","e","Error","code","117","_defineProperty","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_objectWithoutProperties","keys","copyProps","context","onNewComment","language","rest","prop","page","callbacks","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes","_propTypes2","DISQUS_CONFIG","__disqusAdded","DisqusThread","_React$Component","getPrototypeOf","loadDisqus","nextProps","identifier","_this2","reduce","memo","some","config","createElement","id","disqus","document","getElementsByTagName","async","src","shortname","appendChild","_this3","forEach","DISQUS","reload","window","disqus_config","addDisqusScript","Component","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","118","138","root","factory","replacement","ch","charMap","remove","lower","JSON","extend","customMap","79","_reactDisqusComments","_reactDisqusComments2","_gatsbyConfig","_gatsbyConfig2","Disqus","_Component","_this","toasts","notifyAboutComment","bind","onSnackbarDismiss","_state$toasts","setState","render","postNode","post","222","_gatsbyLink","_gatsbyLink2","_moment","_moment2","_Disqus","_Disqus2","_slugify","_slugify2","_html","_html2","_reactAudioplayer","_reactAudioplayer2","EpisodeTemplateDetails","_props$data$site$site","allPodcastFeedItem","playlist","enclosure","homeBlock","to","commentsBlock","width","height","autoPlay","dangerouslySetInnerHTML","__html","published","rel","474","234","pageQuery","_reactHelmet","_reactHelmet2","_EpisodeTemplateDetails","_EpisodeTemplateDetails2","EpisodeTemplate","postTitle","content"],"mappings":"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","file":"component---src-templates-episode-template-jsx-edf0d4600b3b36cbe87e.js","sourcesContent":["webpackJsonp([109236248213326],{\n\n/***/ 78:\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tmodule.exports = {\n\t  siteMetadata: {\n\t    url: 'https://lumen.netlify.com/',\n\t    title: 'Blog by John Doe',\n\t    subtitle: 'Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.',\n\t    copyright: '© All rights reserved.',\n\t    disqusShortname: '',\n\t    menu: [{\n\t      label: 'Articles',\n\t      path: '/'\n\t    }, {\n\t      label: 'About me',\n\t      path: '/about/'\n\t    }, {\n\t      label: 'Contact me',\n\t      path: '/contact/'\n\t    }],\n\t    author: {\n\t      name: 'John Doe',\n\t      email: '#',\n\t      telegram: '#',\n\t      twitter: '#',\n\t      github: '#',\n\t      rss: '#',\n\t      vk: '#a',\n\t      ivoox: 'ivoox',\n\t      itunes: 'itunes'\n\t    }\n\t  },\n\t  pathPrefix: '/gatsby-starter-lumen-podcast',\n\t  plugins: [{\n\t    resolve: 'gatsby-source-filesystem',\n\t    options: {\n\t      path: __dirname + '/src/pages',\n\t      name: 'pages'\n\t    }\n\t  }, {\n\t    resolve: 'gatsby-source-feed',\n\t    options: {\n\t      feedURL: 'https://www.ivoox.com/podcast-1bit-memoria_fg_f1469800_filtro_1.xml'\n\t    }\n\t  }, {\n\t    resolve: 'gatsby-plugin-google-analytics',\n\t    options: { trackingId: '' }\n\t  }, {\n\t    resolve: 'gatsby-plugin-feed',\n\t    options: {\n\t      query: '\\n          {\\n            site {\\n              siteMetadata {\\n                url\\n                title\\n                subtitle\\n              }\\n            }\\n          }\\n        ',\n\t      feeds: [{\n\t        serialize: function serialize(_ref) {\n\t          var _ref$query = _ref.query,\n\t              site = _ref$query.site,\n\t              allMarkdownRemark = _ref$query.allMarkdownRemark;\n\t          return allMarkdownRemark.edges.map(function (edge) {\n\t            return _extends({}, edge.node.frontmatter, {\n\t              description: edge.node.frontmatter.description,\n\t              date: edge.node.frontmatter.date,\n\t              url: site.siteMetadata.url + edge.node.fields.slug,\n\t              guid: site.siteMetadata.url + edge.node.fields.slug,\n\t              custom_elements: [{ 'content:encoded': edge.node.html }]\n\t            });\n\t          });\n\t        },\n\t        query: '\\n              {\\n                allMarkdownRemark(\\n                  limit: 1000,\\n                  sort: { order: DESC, fields: [frontmatter___date] },\\n                  filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\\n                ) {\\n                  edges {\\n                    node {\\n                      html\\n                      fields {\\n                        slug\\n                      }\\n                      frontmatter {\\n                        title\\n                        date\\n                        layout\\n                        draft\\n                        description\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            ',\n\t        output: '/rss.xml'\n\t      }]\n\t    }\n\t  }, {\n\t    resolve: 'gatsby-transformer-remark',\n\t    options: {\n\t      plugins: [{\n\t        resolve: 'gatsby-remark-images',\n\t        options: {\n\t          maxWidth: 960\n\t        }\n\t      }, {\n\t        resolve: 'gatsby-remark-responsive-iframe',\n\t        options: { wrapperStyle: 'margin-bottom: 1.0725rem' }\n\t      }, 'gatsby-remark-prismjs', 'gatsby-remark-copy-linked-files', 'gatsby-remark-smartypants']\n\t    }\n\t  }, 'gatsby-transformer-sharp', 'gatsby-plugin-sharp', {\n\t    resolve: 'gatsby-plugin-google-fonts',\n\t    options: {\n\t      fonts: ['roboto:400,400i,500,700']\n\t    }\n\t  }, {\n\t    resolve: 'gatsby-plugin-sitemap',\n\t    options: {\n\t      query: '\\n            {\\n              site {\\n                siteMetadata {\\n                  url\\n                }\\n              }\\n              allSitePage(\\n                filter: {\\n                  path: { regex: \"/^(?!/404/|/404.html|/dev-404-page/)/\" }\\n                }\\n              ) {\\n                edges {\\n                  node {\\n                    path\\n                  }\\n                }\\n              }\\n          }',\n\t      output: '/sitemap.xml',\n\t      serialize: function serialize(_ref2) {\n\t        var site = _ref2.site,\n\t            allSitePage = _ref2.allSitePage;\n\t        return allSitePage.edges.map(function (edge) {\n\t          return {\n\t            url: site.siteMetadata.url + edge.node.path,\n\t            changefreq: 'daily',\n\t            priority: 0.7\n\t          };\n\t        });\n\t      }\n\t    }\n\t  }, 'gatsby-plugin-offline', 'gatsby-plugin-catch-links', 'gatsby-plugin-react-helmet', 'gatsby-plugin-postcss-sass']\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ }),\n\n/***/ 170:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(421).default;\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = linkifyHtml;\n\t\n\tvar _simpleHtmlTokenizer = __webpack_require__(427);\n\t\n\tvar _simpleHtmlTokenizer2 = _interopRequireDefault(_simpleHtmlTokenizer);\n\t\n\tvar _linkify = __webpack_require__(422);\n\t\n\tvar linkify = _interopRequireWildcard(_linkify);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar options = linkify.options;\n\tvar Options = options.Options;\n\t\n\t\n\tvar StartTag = 'StartTag';\n\tvar EndTag = 'EndTag';\n\tvar Chars = 'Chars';\n\tvar Comment = 'Comment';\n\t\n\t/**\n\t\t`tokens` and `token` in this section refer to tokens generated by the HTML\n\t\tparser.\n\t*/\n\tfunction linkifyHtml(str) {\n\t\tvar opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t\tvar tokens = _simpleHtmlTokenizer2.default.tokenize(str);\n\t\tvar linkifiedTokens = [];\n\t\tvar linkified = [];\n\t\tvar i;\n\t\n\t\topts = new Options(opts);\n\t\n\t\t// Linkify the tokens given by the parser\n\t\tfor (i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\n\t\t\tif (token.type === StartTag) {\n\t\t\t\tlinkifiedTokens.push(token);\n\t\n\t\t\t\t// Ignore all the contents of ignored tags\n\t\t\t\tvar tagName = token.tagName.toUpperCase();\n\t\t\t\tvar isIgnored = tagName === 'A' || options.contains(opts.ignoreTags, tagName);\n\t\t\t\tif (!isIgnored) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\n\t\t\t\tvar preskipLen = linkifiedTokens.length;\n\t\t\t\tskipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n\t\t\t\ti += linkifiedTokens.length - preskipLen - 1;\n\t\t\t\tcontinue;\n\t\t\t} else if (token.type !== Chars) {\n\t\t\t\t// Skip this token, it's not important\n\t\t\t\tlinkifiedTokens.push(token);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\t// Valid text token, linkify it!\n\t\t\tvar linkifedChars = linkifyChars(token.chars, opts);\n\t\t\tlinkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n\t\t}\n\t\n\t\t// Convert the tokens back into a string\n\t\tfor (i = 0; i < linkifiedTokens.length; i++) {\n\t\t\tvar _token = linkifiedTokens[i];\n\t\t\tswitch (_token.type) {\n\t\t\t\tcase StartTag:\n\t\t\t\t\tvar link = '<' + _token.tagName;\n\t\t\t\t\tif (_token.attributes.length > 0) {\n\t\t\t\t\t\tvar attrs = attrsToStrings(_token.attributes);\n\t\t\t\t\t\tlink += ' ' + attrs.join(' ');\n\t\t\t\t\t}\n\t\t\t\t\tlink += '>';\n\t\t\t\t\tlinkified.push(link);\n\t\t\t\t\tbreak;\n\t\t\t\tcase EndTag:\n\t\t\t\t\tlinkified.push('</' + _token.tagName + '>');\n\t\t\t\t\tbreak;\n\t\t\t\tcase Chars:\n\t\t\t\t\tlinkified.push(escapeText(_token.chars));\n\t\t\t\t\tbreak;\n\t\t\t\tcase Comment:\n\t\t\t\t\tlinkified.push('<!--' + escapeText(_token.chars) + '-->');\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\n\t\treturn linkified.join('');\n\t}\n\t\n\t/**\n\t\t`tokens` and `token` in this section referes to tokens returned by\n\t\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n\t*/\n\tfunction linkifyChars(str, opts) {\n\t\tvar tokens = linkify.tokenize(str);\n\t\tvar result = [];\n\t\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\n\t\t\tif (token.type === 'nl' && opts.nl2br) {\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: StartTag,\n\t\t\t\t\ttagName: 'br',\n\t\t\t\t\tattributes: [],\n\t\t\t\t\tselfClosing: true\n\t\t\t\t});\n\t\t\t\tcontinue;\n\t\t\t} else if (!token.isLink || !opts.check(token)) {\n\t\t\t\tresult.push({ type: Chars, chars: token.toString() });\n\t\t\t\tcontinue;\n\t\t\t}\n\t\n\t\t\tvar _opts$resolve = opts.resolve(token),\n\t\t\t    href = _opts$resolve.href,\n\t\t\t    formatted = _opts$resolve.formatted,\n\t\t\t    formattedHref = _opts$resolve.formattedHref,\n\t\t\t    tagName = _opts$resolve.tagName,\n\t\t\t    className = _opts$resolve.className,\n\t\t\t    target = _opts$resolve.target,\n\t\t\t    attributes = _opts$resolve.attributes;\n\t\n\t\t\t// Build up attributes\n\t\n\t\n\t\t\tvar attributeArray = [['href', formattedHref]];\n\t\n\t\t\tif (className) {\n\t\t\t\tattributeArray.push(['class', className]);\n\t\t\t}\n\t\n\t\t\tif (target) {\n\t\t\t\tattributeArray.push(['target', target]);\n\t\t\t}\n\t\n\t\t\tfor (var attr in attributes) {\n\t\t\t\tattributeArray.push([attr, attributes[attr]]);\n\t\t\t}\n\t\n\t\t\t// Add the required tokens\n\t\t\tresult.push({\n\t\t\t\ttype: StartTag,\n\t\t\t\ttagName: tagName,\n\t\t\t\tattributes: attributeArray,\n\t\t\t\tselfClosing: false\n\t\t\t});\n\t\t\tresult.push({ type: Chars, chars: formatted });\n\t\t\tresult.push({ type: EndTag, tagName: tagName });\n\t\t}\n\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tReturns a list of tokens skipped until the closing tag of tagName.\n\t\n\t\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t\t* `i` is the index immediately after the opening tag to skip\n\t\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\t\n\t\tCaveats\n\t\n\t\t* Assumes that i is the first token after the given opening tagName\n\t\t* The closing tag will be skipped, but nothing after it\n\t\t* Will track whether there is a nested tag of the same type\n\t*/\n\tfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n\t\n\t\t// number of tokens of this type on the [fictional] stack\n\t\tvar stackCount = 1;\n\t\n\t\twhile (i < tokens.length && stackCount > 0) {\n\t\t\tvar token = tokens[i];\n\t\n\t\t\tif (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n\t\t\t\t// Nested tag of the same type, \"add to stack\"\n\t\t\t\tstackCount++;\n\t\t\t} else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n\t\t\t\t// Closing tag\n\t\t\t\tstackCount--;\n\t\t\t}\n\t\n\t\t\tskippedTokens.push(token);\n\t\t\ti++;\n\t\t}\n\t\n\t\t// Note that if stackCount > 0 here, the HTML is probably invalid\n\t\treturn skippedTokens;\n\t}\n\t\n\tfunction escapeText(text) {\n\t\t// Not required, HTML tokenizer ensures this occurs properly\n\t\treturn text;\n\t}\n\t\n\tfunction escapeAttr(attr) {\n\t\treturn attr.replace(/\"/g, '&quot;');\n\t}\n\t\n\tfunction attrsToStrings(attrs) {\n\t\tvar attrStrs = [];\n\t\tfor (var i = 0; i < attrs.length; i++) {\n\t\t\tvar _attrs$i = attrs[i],\n\t\t\t    name = _attrs$i[0],\n\t\t\t    value = _attrs$i[1];\n\t\n\t\t\tattrStrs.push(name + '=\"' + escapeAttr(value) + '\"');\n\t\t}\n\t\treturn attrStrs;\n\t}\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\t\n\tvar _class = __webpack_require__(67);\n\t\n\tvar _options = __webpack_require__(426);\n\t\n\tvar options = _interopRequireWildcard(_options);\n\t\n\tvar _scanner = __webpack_require__(424);\n\t\n\tvar scanner = _interopRequireWildcard(_scanner);\n\t\n\tvar _parser = __webpack_require__(423);\n\t\n\tvar parser = _interopRequireWildcard(_parser);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tif (!Array.isArray) {\n\t\tArray.isArray = function (arg) {\n\t\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t\t};\n\t}\n\t\n\t/**\n\t\tConverts a string into tokens that represent linkable and non-linkable bits\n\t\t@method tokenize\n\t\t@param {String} str\n\t\t@return {Array} tokens\n\t*/\n\tvar tokenize = function tokenize(str) {\n\t\treturn parser.run(scanner.run(str));\n\t};\n\t\n\t/**\n\t\tReturns a list of linkable items in the given string.\n\t*/\n\tvar find = function find(str) {\n\t\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t\tvar tokens = tokenize(str);\n\t\tvar filtered = [];\n\t\n\t\tfor (var i = 0; i < tokens.length; i++) {\n\t\t\tvar token = tokens[i];\n\t\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\t\tfiltered.push(token.toObject());\n\t\t\t}\n\t\t}\n\t\n\t\treturn filtered;\n\t};\n\t\n\t/**\n\t\tIs the given string valid linkable text of some sort\n\t\tNote that this does not trim the text for you.\n\t\n\t\tOptionally pass in a second `type` param, which is the type of link to test\n\t\tfor.\n\t\n\t\tFor example,\n\t\n\t\t\ttest(str, 'email');\n\t\n\t\tWill return `true` if str is a valid email.\n\t*/\n\tvar test = function test(str) {\n\t\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t\tvar tokens = tokenize(str);\n\t\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n\t};\n\t\n\t// Scanner and parser provide states and tokens for the lexicographic stage\n\t// (will be used to add additional link types)\n\texports.find = find;\n\texports.inherits = _class.inherits;\n\texports.options = options;\n\texports.parser = parser;\n\texports.scanner = scanner;\n\texports.test = test;\n\texports.tokenize = tokenize;\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\t\n\tvar _state = __webpack_require__(171);\n\t\n\tvar _text = __webpack_require__(101);\n\t\n\tvar TEXT_TOKENS = _interopRequireWildcard(_text);\n\t\n\tvar _multi = __webpack_require__(425);\n\t\n\tvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar makeState = function makeState(tokenClass) {\n\t\treturn new _state.TokenState(tokenClass);\n\t};\n\t\n\t// The universal starting state.\n\t/**\n\t\tNot exactly parser, more like the second-stage scanner (although we can\n\t\ttheoretically hotswap the code here with a real parser in the future... but\n\t\tfor a little URL-finding utility abstract syntax trees may be a little\n\t\toverkill).\n\t\n\t\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\t\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\t\treference)\n\t\n\t\t@module linkify\n\t\t@submodule parser\n\t\t@main parser\n\t*/\n\t\n\tvar S_START = makeState();\n\t\n\t// Intermediate states for URLs. Note that domains that begin with a protocol\n\t// are treated slighly differently from those that don't.\n\tvar S_PROTOCOL = makeState(); // e.g., 'http:'\n\tvar S_MAILTO = makeState(); // 'mailto:'\n\tvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\n\tvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\n\tvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\n\tvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\n\tvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\n\tvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\n\tvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\n\tvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\n\tvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\tvar S_URL_OPENBRACE = makeState(); // URL followed by {\n\tvar S_URL_OPENBRACKET = makeState(); // URL followed by [\n\tvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\n\tvar S_URL_OPENPAREN = makeState(); // URL followed by (\n\tvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\n\tvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\n\tvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\n\tvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\n\tvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\n\tvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\n\tvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\n\tvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\n\tvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\n\tvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\n\tvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\n\tvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\n\tvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\n\tvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\n\tvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\n\tvar S_LOCALPART = makeState(); // Local part of the email address\n\tvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\n\tvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\n\tvar S_NL = makeState(_multi.NL); // single new line\n\t\n\t// Make path from start to protocol (with '//')\n\tS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\t\n\tS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\n\tS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\t\n\t// The very first potential domain name\n\tS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\t\n\t// Force URL for protocol followed by anything sane\n\tS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\t\n\t// Account for dots and hyphens\n\t// hyphens are usually parts of domain names\n\tS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\n\tS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\t\n\t// Hyphen can jump back to a domain name\n\t\n\t// After the first domain and a dot, we can find either a URL or another domain\n\tS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\t\n\tS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\t\n\t// S_TLD accepts! But the URL could be longer, try to find a match greedily\n\t// The `run` function should be able to \"rollback\" to the accepting state\n\tS_TLD.on(_text.DOT, S_DOMAIN_DOT);\n\tS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\t\n\t// Become real URLs after `SLASH` or `COLON NUM SLASH`\n\t// Here PSS and non-PSS converge\n\tS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\n\tS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\n\tS_TLD_PORT.on(_text.SLASH, S_URL);\n\tS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\n\tS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\t\n\t// Types of characters the URL can definitely end in\n\tvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\t\n\t// Types of tokens that can follow a URL and be part of the query string\n\t// but cannot be the very last characters\n\t// Characters that cannot appear in the URL at all should be excluded\n\tvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\t\n\t// These states are responsible primarily for determining whether or not to\n\t// include the final round bracket.\n\t\n\t// URL, followed by an opening bracket\n\tS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\t\n\t// URL with extra symbols at the end, followed by an opening bracket\n\tS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\t\n\t// Closing bracket component. This character WILL be included in the URL\n\tS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\n\tS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\n\tS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\n\tS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\n\tS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\n\tS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\n\tS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\n\tS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\n\tS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\n\tS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\n\tS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\n\tS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\t\n\t// URL that beings with an opening bracket, followed by a symbols.\n\t// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n\t// has a single opening bracket for some reason).\n\tS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\n\tS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\n\tS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n\tS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\n\tS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\n\tS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n\tS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n\tS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\t\n\t// URL that begins with an opening bracket, followed by some symbols\n\tS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\n\tS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\n\tS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n\tS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\n\tS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\n\tS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\n\tS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\n\tS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\t\n\tS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\n\tS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\n\tS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\n\tS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\n\tS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\n\tS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\n\tS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\n\tS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\t\n\t// Account for the query string\n\tS_URL.on(qsAccepting, S_URL);\n\tS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\t\n\tS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\tS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\t\n\t// Email address-specific state definitions\n\t// Note: We are not allowing '/' in email addresses since this would interfere\n\t// with real URLs\n\t\n\t// For addresses with the mailto prefix\n\t// 'mailto:' followed by anything sane is a valid email\n\tS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\t\n\t// Greedily get more potential valid email values\n\tS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\tS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\t\n\t// For addresses without the mailto prefix\n\t// Tokens allowed in the localpart of the email\n\tvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\t\n\t// Some of the tokens in `localpartAccepting` are already accounted for here and\n\t// will not be overwritten (don't worry)\n\tS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\n\tS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\n\tS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\t\n\t// Okay we're on a localpart. Now what?\n\t// TODO: IP addresses and what if the email starts with numbers?\n\tS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n\t.on(_text.DOT, S_LOCALPART_DOT);\n\tS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\n\tS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n\t// States following `@` defined above\n\t\n\tvar run = function run(tokens) {\n\t\tvar len = tokens.length;\n\t\tvar cursor = 0;\n\t\tvar multis = [];\n\t\tvar textTokens = [];\n\t\n\t\twhile (cursor < len) {\n\t\t\tvar state = S_START;\n\t\t\tvar secondState = null;\n\t\t\tvar nextState = null;\n\t\t\tvar multiLength = 0;\n\t\t\tvar latestAccepting = null;\n\t\t\tvar sinceAccepts = -1;\n\t\n\t\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t\t// Consider these to be just plain text\n\t\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t\t}\n\t\n\t\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\t\n\t\t\t\t// Get the next state\n\t\t\t\tsecondState = null;\n\t\t\t\tstate = nextState;\n\t\n\t\t\t\t// Keep track of the latest accepting state\n\t\t\t\tif (state.accepts()) {\n\t\t\t\t\tsinceAccepts = 0;\n\t\t\t\t\tlatestAccepting = state;\n\t\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\t\tsinceAccepts++;\n\t\t\t\t}\n\t\n\t\t\t\tcursor++;\n\t\t\t\tmultiLength++;\n\t\t\t}\n\t\n\t\t\tif (sinceAccepts < 0) {\n\t\n\t\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\n\t\t\t\t// Accepting state!\n\t\n\t\t\t\t// First close off the textTokens (if available)\n\t\t\t\tif (textTokens.length > 0) {\n\t\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\t\ttextTokens = [];\n\t\t\t\t}\n\t\n\t\t\t\t// Roll back to the latest accepting state\n\t\t\t\tcursor -= sinceAccepts;\n\t\t\t\tmultiLength -= sinceAccepts;\n\t\n\t\t\t\t// Create a new multitoken\n\t\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t\t}\n\t\t}\n\t\n\t\t// Finally close off the textTokens (if available)\n\t\tif (textTokens.length > 0) {\n\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t}\n\t\n\t\treturn multis;\n\t};\n\t\n\texports.State = _state.TokenState;\n\texports.TOKENS = MULTI_TOKENS;\n\texports.run = run;\n\texports.start = S_START;\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\t\n\tvar _state = __webpack_require__(171);\n\t\n\tvar _text = __webpack_require__(101);\n\t\n\tvar TOKENS = _interopRequireWildcard(_text);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar tlds = 'aaa|aarp|abb|abbott|abogado|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|af|afl|ag|agency|ai|aig|airforce|airtel|al|alibaba|alipay|allfinanz|alsace|am|amica|amsterdam|an|analytics|android|ao|apartments|app|apple|aq|aquarelle|ar|aramco|archi|army|arpa|arte|as|asia|associates|at|attorney|au|auction|audi|audio|author|auto|autos|avianca|aw|ax|axa|az|azure|ba|baidu|band|bank|bar|barcelona|barclaycard|barclays|bargains|bauhaus|bayern|bb|bbc|bbva|bcg|bcn|bd|be|beats|beer|bentley|berlin|best|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bom|bond|boo|book|boots|bosch|bostik|bot|boutique|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|camera|camp|cancerresearch|canon|capetown|capital|car|caravan|cards|care|career|careers|cars|cartier|casa|cash|casino|cat|catering|cba|cbn|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chloe|christmas|chrome|church|ci|cipriani|circle|cisco|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|date|dating|datsun|day|dclk|de|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|diamonds|diet|digital|direct|directory|discount|dj|dk|dm|dnp|do|docs|dog|doha|domains|download|drive|dubai|durban|dvag|dz|earth|eat|ec|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epson|equipment|er|erni|es|esq|estate|et|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|fage|fail|fairwinds|faith|family|fan|fans|farm|fashion|fast|feedback|ferrero|fi|film|final|finance|financial|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|florist|flowers|flsmidth|fly|fm|fo|foo|football|ford|forex|forsale|forum|foundation|fox|fr|fresenius|frl|frogans|frontier|fund|furniture|futbol|fyi|ga|gal|gallery|gallup|game|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|gold|goldpoint|golf|goo|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|group|gs|gt|gu|gucci|guge|guide|guitars|guru|gw|gy|hamburg|hangout|haus|hdfcbank|health|healthcare|help|helsinki|here|hermes|hiphop|hitachi|hiv|hk|hm|hn|hockey|holdings|holiday|homedepot|homes|honda|horse|host|hosting|hoteles|hotmail|house|how|hr|hsbc|ht|hu|hyundai|ibm|icbc|ice|icu|id|ie|ifm|iinet|il|im|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|international|investments|io|ipiranga|iq|ir|irish|is|iselect|ist|istanbul|it|itau|iwc|jaguar|java|jcb|je|jetzt|jewelry|jlc|jll|jm|jmp|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kitchen|kiwi|km|kn|koeln|komatsu|kp|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|lamborghini|lamer|lancaster|land|landrover|lanxess|lasalle|lat|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|legal|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|limited|limo|lincoln|linde|link|live|living|lixil|lk|loan|loans|local|locus|lol|london|lotte|lotto|love|lr|ls|lt|ltd|ltda|lu|lupin|luxe|luxury|lv|ly|ma|madrid|maif|maison|makeup|man|management|mango|market|marketing|markets|marriott|mba|mc|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|mg|mh|miami|microsoft|mil|mini|mk|ml|mm|mma|mn|mo|mobi|mobily|moda|moe|moi|mom|monash|money|montblanc|mormon|mortgage|moscow|motorcycles|mov|movie|movistar|mp|mq|mr|ms|mt|mtn|mtpc|mtr|mu|museum|mutuelle|mv|mw|mx|my|mz|na|nadex|nagoya|name|natura|navy|nc|ne|nec|net|netbank|network|neustar|new|news|nexus|nf|ng|ngo|nhk|ni|nico|nikon|ninja|nissan|nl|no|nokia|norton|nowruz|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|office|okinawa|om|omega|one|ong|onl|online|ooo|oracle|orange|org|organic|origins|osaka|otsuka|ovh|pa|page|pamperedchef|panerai|paris|pars|partners|parts|party|passagens|pe|pet|pf|pg|ph|pharmacy|philips|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pohl|poker|porn|post|pr|praxi|press|pro|prod|productions|prof|promo|properties|property|protection|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|racing|re|read|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|ricoh|rio|rip|ro|rocher|rocks|rodeo|room|rs|rsvp|ru|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|saxo|sb|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scor|scot|sd|se|seat|security|seek|select|sener|services|seven|sew|sex|sexy|sfr|sg|sh|sharp|shell|shia|shiksha|shoes|show|shriram|si|singles|site|sj|sk|ski|skin|sky|skype|sl|sm|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|st|stada|star|starhub|statefarm|statoil|stc|stcgroup|stockholm|storage|store|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|taobao|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|team|tech|technology|tel|telecity|telefonica|temasek|tennis|tf|tg|th|thd|theater|theatre|tickets|tienda|tiffany|tips|tires|tirol|tj|tk|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tp|tr|trade|trading|training|travel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubs|ug|uk|unicom|university|uno|uol|us|uy|uz|va|vacations|vana|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|viking|villas|vin|vip|virgin|vision|vista|vistaprint|viva|vlaanderen|vn|vodka|volkswagen|vote|voting|voto|voyage|vu|vuelos|wales|walter|wang|wanggou|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|wme|wolterskluwer|work|works|world|ws|wtc|wtf|xbox|xerox|xin|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|youtube|yt|za|zara|zero|zip|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js\n\t\n\t/**\n\t\tThe scanner provides an interface that takes a string of text as input, and\n\t\toutputs an array of tokens instances that can be used for easy URL parsing.\n\t\n\t\t@module linkify\n\t\t@submodule scanner\n\t\t@main scanner\n\t*/\n\t\n\tvar NUMBERS = '0123456789'.split('');\n\tvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\n\tvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\t\n\tvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\n\tvar makeState = function makeState(tokenClass) {\n\t\treturn new _state.CharacterState(tokenClass);\n\t};\n\t\n\t// Frequently used states\n\tvar S_START = makeState();\n\tvar S_NUM = makeState(_text.NUM);\n\tvar S_DOMAIN = makeState(_text.DOMAIN);\n\tvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\n\tvar S_WS = makeState(_text.WS);\n\t\n\t// States for special URL symbols\n\tS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\''], makeState(_text.PUNCTUATION));\n\t\n\t// Whitespace jumps\n\t// Tokens of only non-newline whitespace are arbitrarily long\n\tS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\t\n\t// If any whitespace except newline, more whitespace!\n\tS_WS.on(WHITESPACE, S_WS);\n\t\n\t// Generates states for top-level domains\n\t// Note that this is most accurate when tlds are in alphabetical order\n\tfor (var i = 0; i < tlds.length; i++) {\n\t\tvar newStates = (0, _state.stateify)(tlds[i], S_START, _text.TLD, _text.DOMAIN);\n\t\tdomainStates.push.apply(domainStates, newStates);\n\t}\n\t\n\t// Collect the states generated by different protocls\n\tvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\n\tvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\n\tvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\n\tvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\t\n\t// Add the states to the array of DOMAINeric states\n\tdomainStates.push.apply(domainStates, partialProtocolFileStates);\n\tdomainStates.push.apply(domainStates, partialProtocolFtpStates);\n\tdomainStates.push.apply(domainStates, partialProtocolHttpStates);\n\t\n\t// Protocol states\n\tvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\n\tvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\n\tvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\n\tvar S_MAILTO = partialProtocolMailtoStates.pop();\n\tvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\n\tvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\n\tvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\t\n\t// Secure protocols (end with 's')\n\tS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\t\n\tS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\t\n\tdomainStates.push(S_PROTOCOL_SECURE);\n\t\n\t// Become protocol tokens after a COLON\n\tS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\n\tS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\n\tS_MAILTO.on(':', S_FULL_MAILTO);\n\t\n\t// Localhost\n\tvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, partialLocalhostStates);\n\t\n\t// Everything else\n\t// DOMAINs make more DOMAINs\n\t// Number and character transitions\n\tS_START.on(NUMBERS, S_NUM);\n\tS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\t\n\tS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\t\n\t// All the generated states should have a jump to DOMAIN\n\tfor (var _i = 0; _i < domainStates.length; _i++) {\n\t\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\t}\n\t\n\tS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\t\n\t// Set default transition\n\tS_START.defaultTransition = makeState(_text.SYM);\n\t\n\t/**\n\t\tGiven a string, returns an array of TOKEN instances representing the\n\t\tcomposition of that string.\n\t\n\t\t@method run\n\t\t@param {String} str Input string to scan\n\t\t@return {Array} Array of TOKEN instances\n\t*/\n\tvar run = function run(str) {\n\t\n\t\t// The state machine only looks at lowercase strings.\n\t\t// This selective `toLowerCase` is used because lowercasing the entire\n\t\t// string causes the length and character position to vary in some in some\n\t\t// non-English strings. This happens only on V8-based runtimes.\n\t\tvar lowerStr = str.replace(/[A-Z]/g, function (c) {\n\t\t\treturn c.toLowerCase();\n\t\t});\n\t\tvar len = str.length;\n\t\tvar tokens = []; // return value\n\t\n\t\tvar cursor = 0;\n\t\n\t\t// Tokenize the string\n\t\twhile (cursor < len) {\n\t\t\tvar state = S_START;\n\t\t\tvar secondState = null;\n\t\t\tvar nextState = null;\n\t\t\tvar tokenLength = 0;\n\t\t\tvar latestAccepting = null;\n\t\t\tvar sinceAccepts = -1;\n\t\n\t\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\t\tsecondState = null;\n\t\t\t\tstate = nextState;\n\t\n\t\t\t\t// Keep track of the latest accepting state\n\t\t\t\tif (state.accepts()) {\n\t\t\t\t\tsinceAccepts = 0;\n\t\t\t\t\tlatestAccepting = state;\n\t\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\t\tsinceAccepts++;\n\t\t\t\t}\n\t\n\t\t\t\ttokenLength++;\n\t\t\t\tcursor++;\n\t\t\t}\n\t\n\t\t\tif (sinceAccepts < 0) {\n\t\t\t\tcontinue;\n\t\t\t} // Should never happen\n\t\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\ttokenLength -= sinceAccepts;\n\t\n\t\t\t// Get the class for the new token\n\t\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\t\n\t\t\t// No more jumps, just make a new token\n\t\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t\t}\n\t\n\t\treturn tokens;\n\t};\n\t\n\tvar start = S_START;\n\texports.State = _state.CharacterState;\n\texports.TOKENS = TOKENS;\n\texports.run = run;\n\texports.start = start;\n\n/***/ }),\n\n/***/ 171:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\t\n\tvar _class = __webpack_require__(67);\n\t\n\tfunction createStateClass() {\n\t\treturn function (tClass) {\n\t\t\tthis.j = [];\n\t\t\tthis.T = tClass || null;\n\t\t};\n\t}\n\t\n\t/**\n\t\tA simple state machine that can emit token classes\n\t\n\t\tThe `j` property in this class refers to state jumps. It's a\n\t\tmultidimensional array where for each element:\n\t\n\t\t* index [0] is a symbol or class of symbols to transition to.\n\t\t* index [1] is a State instance which matches\n\t\n\t\tThe type of symbol will depend on the target implementation for this class.\n\t\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\t\tbut with a slighly different (polymorphic) implementation.\n\t\n\t\tThe `T` property refers to the token class.\n\t\n\t\tTODO: Can the `on` and `next` methods be combined?\n\t\n\t\t@class BaseState\n\t*/\n\tvar BaseState = createStateClass();\n\tBaseState.prototype = {\n\t\tdefaultTransition: false,\n\t\n\t\t/**\n\t \t@method constructor\n\t \t@param {Class} tClass Pass in the kind of token to emit if there are\n\t \t\tno jumps after this state and the state is accepting.\n\t */\n\t\n\t\t/**\n\t \tOn the given symbol(s), this machine should go to the given state\n\t \t\t@method on\n\t \t@param {Array|Mixed} symbol\n\t \t@param {BaseState} state Note that the type of this state should be the\n\t \t\tsame as the current instance (i.e., don't pass in a different\n\t \t\tsubclass)\n\t */\n\t\ton: function on(symbol, state) {\n\t\t\tif (symbol instanceof Array) {\n\t\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.j.push([symbol, state]);\n\t\t\treturn this;\n\t\t},\n\t\n\t\n\t\t/**\n\t \tGiven the next item, returns next state for that item\n\t \t@method next\n\t \t@param {Mixed} item Should be an instance of the symbols handled by\n\t \t\tthis particular machine.\n\t \t@return {State} state Returns false if no jumps are available\n\t */\n\t\tnext: function next(item) {\n\t\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\t\tvar jump = this.j[i];\n\t\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\t\tvar state = jump[1]; // State to jump to if items match\n\t\n\t\t\t\t// compare item with symbol\n\t\t\t\tif (this.test(item, symbol)) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Nowhere left to jump!\n\t\t\treturn this.defaultTransition;\n\t\t},\n\t\n\t\n\t\t/**\n\t \tDoes this state accept?\n\t \t`true` only of `this.T` exists\n\t \t\t@method accepts\n\t \t@return {Boolean}\n\t */\n\t\taccepts: function accepts() {\n\t\t\treturn !!this.T;\n\t\t},\n\t\n\t\n\t\t/**\n\t \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n\t \ta class of items handled by this state machine.\n\t \t\tThis method should be overriden in extended classes.\n\t \t\t@method test\n\t \t@param {Mixed} item Does this item match the given symbol?\n\t \t@param {Mixed} symbol\n\t \t@return {Boolean}\n\t */\n\t\ttest: function test(item, symbol) {\n\t\t\treturn item === symbol;\n\t\t},\n\t\n\t\n\t\t/**\n\t \tEmit the token for this State (just return it in this case)\n\t \tIf this emits a token, this instance is an accepting state\n\t \t@method emit\n\t \t@return {Class} T\n\t */\n\t\temit: function emit() {\n\t\t\treturn this.T;\n\t\t}\n\t};\n\t\n\t/**\n\t\tState machine for string-based input\n\t\n\t\t@class CharacterState\n\t\t@extends BaseState\n\t*/\n\tvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t\t/**\n\t \tDoes the given character match the given character or regular\n\t \texpression?\n\t \t\t@method test\n\t \t@param {String} char\n\t \t@param {String|RegExp} charOrRegExp\n\t \t@return {Boolean}\n\t */\n\t\ttest: function test(character, charOrRegExp) {\n\t\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t\t}\n\t});\n\t\n\t/**\n\t\tState machine for input in the form of TextTokens\n\t\n\t\t@class TokenState\n\t\t@extends BaseState\n\t*/\n\tvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t\n\t\t/**\n\t  * Similar to `on`, but returns the state the results in the transition from\n\t  * the given item\n\t  * @method jump\n\t  * @param {Mixed} item\n\t  * @param {Token} [token]\n\t  * @return state\n\t  */\n\t\tjump: function jump(token) {\n\t\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\t\n\t\t\tvar state = this.next(new token('')); // dummy temp token\n\t\t\tif (state === this.defaultTransition) {\n\t\t\t\t// Make a new state!\n\t\t\t\tstate = new this.constructor(tClass);\n\t\t\t\tthis.on(token, state);\n\t\t\t} else if (tClass) {\n\t\t\t\tstate.T = tClass;\n\t\t\t}\n\t\t\treturn state;\n\t\t},\n\t\n\t\n\t\t/**\n\t \tIs the given token an instance of the given token class?\n\t \t\t@method test\n\t \t@param {TextToken} token\n\t \t@param {Class} tokenClass\n\t \t@return {Boolean}\n\t */\n\t\ttest: function test(token, tokenClass) {\n\t\t\treturn token instanceof tokenClass;\n\t\t}\n\t});\n\t\n\t/**\n\t\tGiven a non-empty target string, generates states (if required) for each\n\t\tconsecutive substring of characters in str starting from the beginning of\n\t\tthe string. The final state will have a special value, as specified in\n\t\toptions. All other \"in between\" substrings will have a default end state.\n\t\n\t\tThis turns the state machine into a Trie-like data structure (rather than a\n\t\tintelligently-designed DFA).\n\t\n\t\tNote that I haven't really tried these with any strings other than\n\t\tDOMAIN.\n\t\n\t\t@param {String} str\n\t\t@param {CharacterState} start State to jump from the first character\n\t\t@param {Class} endToken Token class to emit when the given string has been\n\t\t\tmatched and no more jumps exist.\n\t\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\t\twe don't have a full match\n\t\t@return {Array} list of newly-created states\n\t*/\n\tfunction stateify(str, start, endToken, defaultToken) {\n\t\tvar i = 0,\n\t\t    len = str.length,\n\t\t    state = start,\n\t\t    newStates = [],\n\t\t    nextState = void 0;\n\t\n\t\t// Find the next state without a jump to the next character\n\t\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\t\tstate = nextState;\n\t\t\ti++;\n\t\t}\n\t\n\t\tif (i >= len) {\n\t\t\treturn [];\n\t\t} // no new tokens were added\n\t\n\t\twhile (i < len - 1) {\n\t\t\tnextState = new CharacterState(defaultToken);\n\t\t\tnewStates.push(nextState);\n\t\t\tstate.on(str[i], nextState);\n\t\t\tstate = nextState;\n\t\t\ti++;\n\t\t}\n\t\n\t\tnextState = new CharacterState(endToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[len - 1], nextState);\n\t\n\t\treturn newStates;\n\t}\n\t\n\texports.CharacterState = CharacterState;\n\texports.TokenState = TokenState;\n\texports.stateify = stateify;\n\n/***/ }),\n\n/***/ 172:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tfunction createTokenClass() {\n\t\treturn function (value) {\n\t\t\tif (value) {\n\t\t\t\tthis.v = value;\n\t\t\t}\n\t\t};\n\t}\n\t\n\texports.createTokenClass = createTokenClass;\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\t\n\tvar _createTokenClass = __webpack_require__(172);\n\t\n\tvar _class = __webpack_require__(67);\n\t\n\tvar _text = __webpack_require__(101);\n\t\n\t/******************************************************************************\n\t\tMulti-Tokens\n\t\tTokens composed of arrays of TextTokens\n\t******************************************************************************/\n\t\n\t// Is the given token a valid domain token?\n\t// Should nums be included here?\n\tfunction isDomainToken(token) {\n\t\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n\t}\n\t\n\t/**\n\t\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\t\tthan the value for a token being a small string of text, it's value an array\n\t\tof text tokens.\n\t\n\t\tUsed for grouping together URLs, emails, hashtags, and other potential\n\t\tcreations.\n\t\n\t\t@class MultiToken\n\t\t@abstract\n\t*/\n\tvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\t\n\tMultiToken.prototype = {\n\t\t/**\n\t \tString representing the type for this token\n\t \t@property type\n\t \t@default 'TOKEN'\n\t */\n\t\ttype: 'token',\n\t\n\t\t/**\n\t \tIs this multitoken a link?\n\t \t@property isLink\n\t \t@default false\n\t */\n\t\tisLink: false,\n\t\n\t\t/**\n\t \tReturn the string this token represents.\n\t \t@method toString\n\t \t@return {String}\n\t */\n\t\ttoString: function toString() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\t\tresult.push(this.v[i].toString());\n\t\t\t}\n\t\t\treturn result.join('');\n\t\t},\n\t\n\t\n\t\t/**\n\t \tWhat should the value for this token be in the `href` HTML attribute?\n\t \tReturns the `.toString` value by default.\n\t \t\t@method toHref\n\t \t@return {String}\n\t */\n\t\ttoHref: function toHref() {\n\t\t\treturn this.toString();\n\t\t},\n\t\n\t\n\t\t/**\n\t \tReturns a hash of relevant values for this token, which includes keys\n\t \t* type - Kind of token ('url', 'email', etc.)\n\t \t* value - Original text\n\t \t* href - The value that should be added to the anchor tag's href\n\t \t\tattribute\n\t \t\t@method toObject\n\t \t@param {String} [protocol] `'http'` by default\n\t \t@return {Object}\n\t */\n\t\ttoObject: function toObject() {\n\t\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\t\n\t\t\treturn {\n\t\t\t\ttype: this.type,\n\t\t\t\tvalue: this.toString(),\n\t\t\t\thref: this.toHref(protocol)\n\t\t\t};\n\t\t}\n\t};\n\t\n\t/**\n\t\tRepresents an arbitrarily mailto email address with the prefix included\n\t\t@class MAILTO\n\t\t@extends MultiToken\n\t*/\n\tvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\t\ttype: 'email',\n\t\tisLink: true\n\t});\n\t\n\t/**\n\t\tRepresents a list of tokens making up a valid email address\n\t\t@class EMAIL\n\t\t@extends MultiToken\n\t*/\n\tvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\t\ttype: 'email',\n\t\tisLink: true,\n\t\ttoHref: function toHref() {\n\t\t\tvar tokens = this.v;\n\t\t\treturn 'mailto:' + this.toString();\n\t\t}\n\t});\n\t\n\t/**\n\t\tRepresents some plain text\n\t\t@class TEXT\n\t\t@extends MultiToken\n\t*/\n\tvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\t\n\t/**\n\t\tMulti-linebreak token - represents a line break\n\t\t@class NL\n\t\t@extends MultiToken\n\t*/\n\tvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\t\n\t/**\n\t\tRepresents a list of tokens making up a valid URL\n\t\t@class URL\n\t\t@extends MultiToken\n\t*/\n\tvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\t\ttype: 'url',\n\t\tisLink: true,\n\t\n\t\t/**\n\t \tLowercases relevant parts of the domain and adds the protocol if\n\t \trequired. Note that this will not escape unsafe HTML characters in the\n\t \tURL.\n\t \t\t@method href\n\t \t@param {String} protocol\n\t \t@return {String}\n\t */\n\t\ttoHref: function toHref() {\n\t\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\t\n\t\t\tvar hasProtocol = false;\n\t\t\tvar hasSlashSlash = false;\n\t\t\tvar tokens = this.v;\n\t\t\tvar result = [];\n\t\t\tvar i = 0;\n\t\n\t\t\t// Make the first part of the domain lowercase\n\t\t\t// Lowercase protocol\n\t\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\t\thasProtocol = true;\n\t\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\t// Skip slash-slash\n\t\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\t\thasSlashSlash = true;\n\t\t\t\tresult.push(tokens[i].toString());\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\t// Lowercase all other characters in the domain\n\t\t\twhile (isDomainToken(tokens[i])) {\n\t\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\t\ti++;\n\t\t\t}\n\t\n\t\t\t// Leave all other characters as they were written\n\t\t\tfor (; i < tokens.length; i++) {\n\t\t\t\tresult.push(tokens[i].toString());\n\t\t\t}\n\t\n\t\t\tresult = result.join('');\n\t\n\t\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\t\tresult = protocol + '://' + result;\n\t\t\t}\n\t\n\t\t\treturn result;\n\t\t},\n\t\thasProtocol: function hasProtocol() {\n\t\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t\t}\n\t});\n\t\n\texports.Base = MultiToken;\n\texports.MAILTOEMAIL = MAILTOEMAIL;\n\texports.EMAIL = EMAIL;\n\texports.NL = NL;\n\texports.TEXT = TEXT;\n\texports.URL = URL;\n\n/***/ }),\n\n/***/ 101:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\t\n\tvar _createTokenClass = __webpack_require__(172);\n\t\n\tvar _class = __webpack_require__(67);\n\t\n\t/******************************************************************************\n\t\tText Tokens\n\t\tTokens composed of strings\n\t******************************************************************************/\n\t\n\t/**\n\t\tAbstract class used for manufacturing text tokens.\n\t\tPass in the value this token represents\n\t\n\t\t@class TextToken\n\t\t@abstract\n\t*/\n\tvar TextToken = (0, _createTokenClass.createTokenClass)();\n\tTextToken.prototype = {\n\t\ttoString: function toString() {\n\t\t\treturn this.v + '';\n\t\t}\n\t};\n\t\n\tfunction inheritsToken(value) {\n\t\tvar props = value ? { v: value } : {};\n\t\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n\t}\n\t\n\t/**\n\t\tA valid domain token\n\t\t@class DOMAIN\n\t\t@extends TextToken\n\t*/\n\tvar DOMAIN = inheritsToken();\n\t\n\t/**\n\t\t@class AT\n\t\t@extends TextToken\n\t*/\n\tvar AT = inheritsToken('@');\n\t\n\t/**\n\t\tRepresents a single colon `:` character\n\t\n\t\t@class COLON\n\t\t@extends TextToken\n\t*/\n\tvar COLON = inheritsToken(':');\n\t\n\t/**\n\t\t@class DOT\n\t\t@extends TextToken\n\t*/\n\tvar DOT = inheritsToken('.');\n\t\n\t/**\n\t\tA character class that can surround the URL, but which the URL cannot begin\n\t\tor end with. Does not include certain English punctuation like parentheses.\n\t\n\t\t@class PUNCTUATION\n\t\t@extends TextToken\n\t*/\n\tvar PUNCTUATION = inheritsToken();\n\t\n\t/**\n\t\tThe word localhost (by itself)\n\t\t@class LOCALHOST\n\t\t@extends TextToken\n\t*/\n\tvar LOCALHOST = inheritsToken();\n\t\n\t/**\n\t\tNewline token\n\t\t@class NL\n\t\t@extends TextToken\n\t*/\n\tvar NL = inheritsToken('\\n');\n\t\n\t/**\n\t\t@class NUM\n\t\t@extends TextToken\n\t*/\n\tvar NUM = inheritsToken();\n\t\n\t/**\n\t\t@class PLUS\n\t\t@extends TextToken\n\t*/\n\tvar PLUS = inheritsToken('+');\n\t\n\t/**\n\t\t@class POUND\n\t\t@extends TextToken\n\t*/\n\tvar POUND = inheritsToken('#');\n\t\n\t/**\n\t\tRepresents a web URL protocol. Supported types include\n\t\n\t\t* `http:`\n\t\t* `https:`\n\t\t* `ftp:`\n\t\t* `ftps:`\n\t\n\t\t@class PROTOCOL\n\t\t@extends TextToken\n\t*/\n\tvar PROTOCOL = inheritsToken();\n\t\n\t/**\n\t\tRepresents the start of the email URI protocol\n\t\n\t\t@class MAILTO\n\t\t@extends TextToken\n\t*/\n\tvar MAILTO = inheritsToken('mailto:');\n\t\n\t/**\n\t\t@class QUERY\n\t\t@extends TextToken\n\t*/\n\tvar QUERY = inheritsToken('?');\n\t\n\t/**\n\t\t@class SLASH\n\t\t@extends TextToken\n\t*/\n\tvar SLASH = inheritsToken('/');\n\t\n\t/**\n\t\t@class UNDERSCORE\n\t\t@extends TextToken\n\t*/\n\tvar UNDERSCORE = inheritsToken('_');\n\t\n\t/**\n\t\tOne ore more non-whitespace symbol.\n\t\t@class SYM\n\t\t@extends TextToken\n\t*/\n\tvar SYM = inheritsToken();\n\t\n\t/**\n\t\t@class TLD\n\t\t@extends TextToken\n\t*/\n\tvar TLD = inheritsToken();\n\t\n\t/**\n\t\tRepresents a string of consecutive whitespace characters\n\t\n\t\t@class WS\n\t\t@extends TextToken\n\t*/\n\tvar WS = inheritsToken();\n\t\n\t/**\n\t\tOpening/closing bracket classes\n\t*/\n\t\n\tvar OPENBRACE = inheritsToken('{');\n\tvar OPENBRACKET = inheritsToken('[');\n\tvar OPENANGLEBRACKET = inheritsToken('<');\n\tvar OPENPAREN = inheritsToken('(');\n\tvar CLOSEBRACE = inheritsToken('}');\n\tvar CLOSEBRACKET = inheritsToken(']');\n\tvar CLOSEANGLEBRACKET = inheritsToken('>');\n\tvar CLOSEPAREN = inheritsToken(')');\n\t\n\tvar AMPERSAND = inheritsToken('&');\n\t\n\texports.Base = TextToken;\n\texports.DOMAIN = DOMAIN;\n\texports.AT = AT;\n\texports.COLON = COLON;\n\texports.DOT = DOT;\n\texports.PUNCTUATION = PUNCTUATION;\n\texports.LOCALHOST = LOCALHOST;\n\texports.NL = NL;\n\texports.NUM = NUM;\n\texports.PLUS = PLUS;\n\texports.POUND = POUND;\n\texports.QUERY = QUERY;\n\texports.PROTOCOL = PROTOCOL;\n\texports.MAILTO = MAILTO;\n\texports.SLASH = SLASH;\n\texports.UNDERSCORE = UNDERSCORE;\n\texports.SYM = SYM;\n\texports.TLD = TLD;\n\texports.WS = WS;\n\texports.OPENBRACE = OPENBRACE;\n\texports.OPENBRACKET = OPENBRACKET;\n\texports.OPENANGLEBRACKET = OPENANGLEBRACKET;\n\texports.OPENPAREN = OPENPAREN;\n\texports.CLOSEBRACE = CLOSEBRACE;\n\texports.CLOSEBRACKET = CLOSEBRACKET;\n\texports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\n\texports.CLOSEPAREN = CLOSEPAREN;\n\texports.AMPERSAND = AMPERSAND;\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.inherits = inherits;\n\tfunction inherits(parent, child) {\n\t\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t\tvar extended = Object.create(parent.prototype);\n\t\tfor (var p in props) {\n\t\t\textended[p] = props[p];\n\t\t}\n\t\textended.constructor = child;\n\t\tchild.prototype = extended;\n\t\treturn child;\n\t}\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar defaults = {\n\t\tdefaultProtocol: 'http',\n\t\tevents: null,\n\t\tformat: noop,\n\t\tformatHref: noop,\n\t\tnl2br: false,\n\t\ttagName: 'a',\n\t\ttarget: typeToTarget,\n\t\tvalidate: true,\n\t\tignoreTags: [],\n\t\tattributes: null,\n\t\tclassName: 'linkified' };\n\t\n\texports.defaults = defaults;\n\texports.Options = Options;\n\texports.contains = contains;\n\t\n\t\n\tfunction Options(opts) {\n\t\topts = opts || {};\n\t\n\t\tthis.defaultProtocol = opts.defaultProtocol || defaults.defaultProtocol;\n\t\tthis.events = opts.events || defaults.events;\n\t\tthis.format = opts.format || defaults.format;\n\t\tthis.formatHref = opts.formatHref || defaults.formatHref;\n\t\tthis.nl2br = opts.nl2br || defaults.nl2br;\n\t\tthis.tagName = opts.tagName || defaults.tagName;\n\t\tthis.target = opts.target || defaults.target;\n\t\tthis.validate = opts.validate || defaults.validate;\n\t\tthis.ignoreTags = [];\n\t\n\t\t// linkAttributes and linkClass is deprecated\n\t\tthis.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;\n\t\tthis.className = opts.className || opts.linkClass || defaults.className;\n\t\n\t\t// Make all tags names upper case\n\t\n\t\tvar ignoredTags = opts.ignoreTags || defaults.ignoreTags;\n\t\tfor (var i = 0; i < ignoredTags.length; i++) {\n\t\t\tthis.ignoreTags.push(ignoredTags[i].toUpperCase());\n\t\t}\n\t}\n\t\n\tOptions.prototype = {\n\t\t/**\n\t  * Given the token, return all options for how it should be displayed\n\t  */\n\t\tresolve: function resolve(token) {\n\t\t\tvar href = token.toHref(this.defaultProtocol);\n\t\t\treturn {\n\t\t\t\tformatted: this.get('format', token.toString(), token),\n\t\t\t\tformattedHref: this.get('formatHref', href, token),\n\t\t\t\ttagName: this.get('tagName', href, token),\n\t\t\t\tclassName: this.get('className', href, token),\n\t\t\t\ttarget: this.get('target', href, token),\n\t\t\t\tevents: this.getObject('events', href, token),\n\t\t\t\tattributes: this.getObject('attributes', href, token)\n\t\t\t};\n\t\t},\n\t\n\t\n\t\t/**\n\t  * Returns true or false based on whether a token should be displayed as a\n\t  * link based on the user options. By default,\n\t  */\n\t\tcheck: function check(token) {\n\t\t\treturn this.get('validate', token.toString(), token);\n\t\t},\n\t\n\t\n\t\t// Private methods\n\t\n\t\t/**\n\t  * Resolve an option's value based on the value of the option and the given\n\t  * params.\n\t  * @param [String] key Name of option to use\n\t  * @param operator will be passed to the target option if it's method\n\t  * @param [MultiToken] token The token from linkify.tokenize\n\t  */\n\t\tget: function get(key, operator, token) {\n\t\t\tvar option = this[key];\n\t\n\t\t\tif (!option) {\n\t\t\t\treturn option;\n\t\t\t}\n\t\n\t\t\tswitch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {\n\t\t\t\tcase 'function':\n\t\t\t\t\treturn option(operator, token.type);\n\t\t\t\tcase 'object':\n\t\t\t\t\tvar optionValue = option[token.type] || defaults[key];\n\t\t\t\t\treturn typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;\n\t\t\t}\n\t\n\t\t\treturn option;\n\t\t},\n\t\tgetObject: function getObject(key, operator, token) {\n\t\t\tvar option = this[key];\n\t\t\treturn typeof option === 'function' ? option(operator, token.type) : option;\n\t\t}\n\t};\n\t\n\t/**\n\t * Quick indexOf replacement for checking the ignoreTags option\n\t */\n\tfunction contains(arr, value) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i] === value) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tfunction noop(val) {\n\t\treturn val;\n\t}\n\t\n\tfunction typeToTarget(href, type) {\n\t\treturn type === 'url' ? '_blank' : null;\n\t}\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _html5NamedCharRefs = __webpack_require__(175);\n\t\n\tvar _html5NamedCharRefs2 = _interopRequireDefault(_html5NamedCharRefs);\n\t\n\tvar _entityParser = __webpack_require__(173);\n\t\n\tvar _entityParser2 = _interopRequireDefault(_entityParser);\n\t\n\tvar _eventedTokenizer = __webpack_require__(174);\n\t\n\tvar _eventedTokenizer2 = _interopRequireDefault(_eventedTokenizer);\n\t\n\tvar _tokenizer = __webpack_require__(176);\n\t\n\tvar _tokenizer2 = _interopRequireDefault(_tokenizer);\n\t\n\tvar _tokenize = __webpack_require__(428);\n\t\n\tvar _tokenize2 = _interopRequireDefault(_tokenize);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar HTML5Tokenizer = {\n\t\tHTML5NamedCharRefs: _html5NamedCharRefs2.default,\n\t\tEntityParser: _entityParser2.default,\n\t\tEventedTokenizer: _eventedTokenizer2.default,\n\t\tTokenizer: _tokenizer2.default,\n\t\ttokenize: _tokenize2.default\n\t};\n\t\n\texports.default = HTML5Tokenizer;\n\n/***/ }),\n\n/***/ 173:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tfunction EntityParser(named) {\n\t  this.named = named;\n\t}\n\t\n\tvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\n\tvar CHARCODE = /^#([0-9]+)$/;\n\tvar NAMED = /^([A-Za-z0-9]+)$/;\n\t\n\tEntityParser.prototype.parse = function (entity) {\n\t  if (!entity) {\n\t    return;\n\t  }\n\t  var matches = entity.match(HEXCHARCODE);\n\t  if (matches) {\n\t    return \"&#x\" + matches[1] + \";\";\n\t  }\n\t  matches = entity.match(CHARCODE);\n\t  if (matches) {\n\t    return \"&#\" + matches[1] + \";\";\n\t  }\n\t  matches = entity.match(NAMED);\n\t  if (matches) {\n\t    return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n\t  }\n\t};\n\t\n\texports.default = EntityParser;\n\n/***/ }),\n\n/***/ 174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _utils = __webpack_require__(429);\n\t\n\tfunction EventedTokenizer(delegate, entityParser) {\n\t  this.delegate = delegate;\n\t  this.entityParser = entityParser;\n\t\n\t  this.state = null;\n\t  this.input = null;\n\t\n\t  this.index = -1;\n\t  this.line = -1;\n\t  this.column = -1;\n\t  this.tagLine = -1;\n\t  this.tagColumn = -1;\n\t\n\t  this.reset();\n\t}\n\t\n\tEventedTokenizer.prototype = {\n\t  reset: function reset() {\n\t    this.state = 'beforeData';\n\t    this.input = '';\n\t\n\t    this.index = 0;\n\t    this.line = 1;\n\t    this.column = 0;\n\t\n\t    this.tagLine = -1;\n\t    this.tagColumn = -1;\n\t\n\t    this.delegate.reset();\n\t  },\n\t\n\t  tokenize: function tokenize(input) {\n\t    this.reset();\n\t    this.tokenizePart(input);\n\t    this.tokenizeEOF();\n\t  },\n\t\n\t  tokenizePart: function tokenizePart(input) {\n\t    this.input += (0, _utils.preprocessInput)(input);\n\t\n\t    while (this.index < this.input.length) {\n\t      this.states[this.state].call(this);\n\t    }\n\t  },\n\t\n\t  tokenizeEOF: function tokenizeEOF() {\n\t    this.flushData();\n\t  },\n\t\n\t  flushData: function flushData() {\n\t    if (this.state === 'data') {\n\t      this.delegate.finishData();\n\t      this.state = 'beforeData';\n\t    }\n\t  },\n\t\n\t  peek: function peek() {\n\t    return this.input.charAt(this.index);\n\t  },\n\t\n\t  consume: function consume() {\n\t    var char = this.peek();\n\t\n\t    this.index++;\n\t\n\t    if (char === \"\\n\") {\n\t      this.line++;\n\t      this.column = 0;\n\t    } else {\n\t      this.column++;\n\t    }\n\t\n\t    return char;\n\t  },\n\t\n\t  consumeCharRef: function consumeCharRef() {\n\t    var endIndex = this.input.indexOf(';', this.index);\n\t    if (endIndex === -1) {\n\t      return;\n\t    }\n\t    var entity = this.input.slice(this.index, endIndex);\n\t    var chars = this.entityParser.parse(entity);\n\t    if (chars) {\n\t      var count = entity.length;\n\t      // consume the entity chars\n\t      while (count) {\n\t        this.consume();\n\t        count--;\n\t      }\n\t      // consume the `;`\n\t      this.consume();\n\t\n\t      return chars;\n\t    }\n\t  },\n\t\n\t  markTagStart: function markTagStart() {\n\t    // these properties to be removed in next major bump\n\t    this.tagLine = this.line;\n\t    this.tagColumn = this.column;\n\t\n\t    if (this.delegate.tagOpen) {\n\t      this.delegate.tagOpen();\n\t    }\n\t  },\n\t\n\t  states: {\n\t    beforeData: function beforeData() {\n\t      var char = this.peek();\n\t\n\t      if (char === \"<\") {\n\t        this.state = 'tagOpen';\n\t        this.markTagStart();\n\t        this.consume();\n\t      } else {\n\t        this.state = 'data';\n\t        this.delegate.beginData();\n\t      }\n\t    },\n\t\n\t    data: function data() {\n\t      var char = this.peek();\n\t\n\t      if (char === \"<\") {\n\t        this.delegate.finishData();\n\t        this.state = 'tagOpen';\n\t        this.markTagStart();\n\t        this.consume();\n\t      } else if (char === \"&\") {\n\t        this.consume();\n\t        this.delegate.appendToData(this.consumeCharRef() || \"&\");\n\t      } else {\n\t        this.consume();\n\t        this.delegate.appendToData(char);\n\t      }\n\t    },\n\t\n\t    tagOpen: function tagOpen() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"!\") {\n\t        this.state = 'markupDeclaration';\n\t      } else if (char === \"/\") {\n\t        this.state = 'endTagOpen';\n\t      } else if ((0, _utils.isAlpha)(char)) {\n\t        this.state = 'tagName';\n\t        this.delegate.beginStartTag();\n\t        this.delegate.appendToTagName(char.toLowerCase());\n\t      }\n\t    },\n\t\n\t    markupDeclaration: function markupDeclaration() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"-\" && this.input.charAt(this.index) === \"-\") {\n\t        this.consume();\n\t        this.state = 'commentStart';\n\t        this.delegate.beginComment();\n\t      }\n\t    },\n\t\n\t    commentStart: function commentStart() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"-\") {\n\t        this.state = 'commentStartDash';\n\t      } else if (char === \">\") {\n\t        this.delegate.finishComment();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.delegate.appendToCommentData(char);\n\t        this.state = 'comment';\n\t      }\n\t    },\n\t\n\t    commentStartDash: function commentStartDash() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"-\") {\n\t        this.state = 'commentEnd';\n\t      } else if (char === \">\") {\n\t        this.delegate.finishComment();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.delegate.appendToCommentData(\"-\");\n\t        this.state = 'comment';\n\t      }\n\t    },\n\t\n\t    comment: function comment() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"-\") {\n\t        this.state = 'commentEndDash';\n\t      } else {\n\t        this.delegate.appendToCommentData(char);\n\t      }\n\t    },\n\t\n\t    commentEndDash: function commentEndDash() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"-\") {\n\t        this.state = 'commentEnd';\n\t      } else {\n\t        this.delegate.appendToCommentData(\"-\" + char);\n\t        this.state = 'comment';\n\t      }\n\t    },\n\t\n\t    commentEnd: function commentEnd() {\n\t      var char = this.consume();\n\t\n\t      if (char === \">\") {\n\t        this.delegate.finishComment();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.delegate.appendToCommentData(\"--\" + char);\n\t        this.state = 'comment';\n\t      }\n\t    },\n\t\n\t    tagName: function tagName() {\n\t      var char = this.consume();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.state = 'beforeAttributeName';\n\t      } else if (char === \"/\") {\n\t        this.state = 'selfClosingStartTag';\n\t      } else if (char === \">\") {\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.delegate.appendToTagName(char);\n\t      }\n\t    },\n\t\n\t    beforeAttributeName: function beforeAttributeName() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.consume();\n\t        return;\n\t      } else if (char === \"/\") {\n\t        this.state = 'selfClosingStartTag';\n\t        this.consume();\n\t      } else if (char === \">\") {\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.state = 'attributeName';\n\t        this.delegate.beginAttribute();\n\t        this.consume();\n\t        this.delegate.appendToAttributeName(char);\n\t      }\n\t    },\n\t\n\t    attributeName: function attributeName() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.state = 'afterAttributeName';\n\t        this.consume();\n\t      } else if (char === \"/\") {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.state = 'selfClosingStartTag';\n\t      } else if (char === \"=\") {\n\t        this.state = 'beforeAttributeValue';\n\t        this.consume();\n\t      } else if (char === \">\") {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.consume();\n\t        this.delegate.appendToAttributeName(char);\n\t      }\n\t    },\n\t\n\t    afterAttributeName: function afterAttributeName() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.consume();\n\t        return;\n\t      } else if (char === \"/\") {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.state = 'selfClosingStartTag';\n\t      } else if (char === \"=\") {\n\t        this.consume();\n\t        this.state = 'beforeAttributeValue';\n\t      } else if (char === \">\") {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.state = 'attributeName';\n\t        this.delegate.beginAttribute();\n\t        this.delegate.appendToAttributeName(char);\n\t      }\n\t    },\n\t\n\t    beforeAttributeValue: function beforeAttributeValue() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.consume();\n\t      } else if (char === '\"') {\n\t        this.state = 'attributeValueDoubleQuoted';\n\t        this.delegate.beginAttributeValue(true);\n\t        this.consume();\n\t      } else if (char === \"'\") {\n\t        this.state = 'attributeValueSingleQuoted';\n\t        this.delegate.beginAttributeValue(true);\n\t        this.consume();\n\t      } else if (char === \">\") {\n\t        this.delegate.beginAttributeValue(false);\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.state = 'attributeValueUnquoted';\n\t        this.delegate.beginAttributeValue(false);\n\t        this.consume();\n\t        this.delegate.appendToAttributeValue(char);\n\t      }\n\t    },\n\t\n\t    attributeValueDoubleQuoted: function attributeValueDoubleQuoted() {\n\t      var char = this.consume();\n\t\n\t      if (char === '\"') {\n\t        this.delegate.finishAttributeValue();\n\t        this.state = 'afterAttributeValueQuoted';\n\t      } else if (char === \"&\") {\n\t        this.delegate.appendToAttributeValue(this.consumeCharRef('\"') || \"&\");\n\t      } else {\n\t        this.delegate.appendToAttributeValue(char);\n\t      }\n\t    },\n\t\n\t    attributeValueSingleQuoted: function attributeValueSingleQuoted() {\n\t      var char = this.consume();\n\t\n\t      if (char === \"'\") {\n\t        this.delegate.finishAttributeValue();\n\t        this.state = 'afterAttributeValueQuoted';\n\t      } else if (char === \"&\") {\n\t        this.delegate.appendToAttributeValue(this.consumeCharRef(\"'\") || \"&\");\n\t      } else {\n\t        this.delegate.appendToAttributeValue(char);\n\t      }\n\t    },\n\t\n\t    attributeValueUnquoted: function attributeValueUnquoted() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.state = 'beforeAttributeName';\n\t      } else if (char === \"&\") {\n\t        this.consume();\n\t        this.delegate.appendToAttributeValue(this.consumeCharRef(\">\") || \"&\");\n\t      } else if (char === \">\") {\n\t        this.delegate.finishAttributeValue();\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.consume();\n\t        this.delegate.appendToAttributeValue(char);\n\t      }\n\t    },\n\t\n\t    afterAttributeValueQuoted: function afterAttributeValueQuoted() {\n\t      var char = this.peek();\n\t\n\t      if ((0, _utils.isSpace)(char)) {\n\t        this.consume();\n\t        this.state = 'beforeAttributeName';\n\t      } else if (char === \"/\") {\n\t        this.consume();\n\t        this.state = 'selfClosingStartTag';\n\t      } else if (char === \">\") {\n\t        this.consume();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.state = 'beforeAttributeName';\n\t      }\n\t    },\n\t\n\t    selfClosingStartTag: function selfClosingStartTag() {\n\t      var char = this.peek();\n\t\n\t      if (char === \">\") {\n\t        this.consume();\n\t        this.delegate.markTagAsSelfClosing();\n\t        this.delegate.finishTag();\n\t        this.state = 'beforeData';\n\t      } else {\n\t        this.state = 'beforeAttributeName';\n\t      }\n\t    },\n\t\n\t    endTagOpen: function endTagOpen() {\n\t      var char = this.consume();\n\t\n\t      if ((0, _utils.isAlpha)(char)) {\n\t        this.state = 'tagName';\n\t        this.delegate.beginEndTag();\n\t        this.delegate.appendToTagName(char.toLowerCase());\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\texports.default = EventedTokenizer;\n\n/***/ }),\n\n/***/ 175:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\tvar HTML5NamedCharRefs = {\n\t    // We don't need the complete named character reference because linkifyHtml\n\t    // does not modify the escape sequences. We do need &nbsp; so that\n\t    // whitespace is parsed properly. Other types of whitespace should already\n\t    // be accounted for\n\t    nbsp: \"\\xA0\"\n\t};\n\texports.default = HTML5NamedCharRefs;\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.default = tokenize;\n\t\n\tvar _tokenizer = __webpack_require__(176);\n\t\n\tvar _tokenizer2 = _interopRequireDefault(_tokenizer);\n\t\n\tvar _entityParser = __webpack_require__(173);\n\t\n\tvar _entityParser2 = _interopRequireDefault(_entityParser);\n\t\n\tvar _html5NamedCharRefs = __webpack_require__(175);\n\t\n\tvar _html5NamedCharRefs2 = _interopRequireDefault(_html5NamedCharRefs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction tokenize(input, options) {\n\t  var tokenizer = new _tokenizer2.default(new _entityParser2.default(_html5NamedCharRefs2.default), options);\n\t  return tokenizer.tokenize(input);\n\t}\n\n/***/ }),\n\n/***/ 176:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _eventedTokenizer = __webpack_require__(174);\n\t\n\tvar _eventedTokenizer2 = _interopRequireDefault(_eventedTokenizer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction Tokenizer(entityParser, options) {\n\t  this.token = null;\n\t  this.startLine = 1;\n\t  this.startColumn = 0;\n\t  this.options = options || {};\n\t  this.tokenizer = new _eventedTokenizer2.default(this, entityParser);\n\t}\n\t\n\tTokenizer.prototype = {\n\t  tokenize: function tokenize(input) {\n\t    this.tokens = [];\n\t    this.tokenizer.tokenize(input);\n\t    return this.tokens;\n\t  },\n\t\n\t  tokenizePart: function tokenizePart(input) {\n\t    this.tokens = [];\n\t    this.tokenizer.tokenizePart(input);\n\t    return this.tokens;\n\t  },\n\t\n\t  tokenizeEOF: function tokenizeEOF() {\n\t    this.tokens = [];\n\t    this.tokenizer.tokenizeEOF();\n\t    return this.tokens[0];\n\t  },\n\t\n\t  reset: function reset() {\n\t    this.token = null;\n\t    this.startLine = 1;\n\t    this.startColumn = 0;\n\t  },\n\t\n\t  addLocInfo: function addLocInfo() {\n\t    if (this.options.loc) {\n\t      this.token.loc = {\n\t        start: {\n\t          line: this.startLine,\n\t          column: this.startColumn\n\t        },\n\t        end: {\n\t          line: this.tokenizer.line,\n\t          column: this.tokenizer.column\n\t        }\n\t      };\n\t    }\n\t    this.startLine = this.tokenizer.line;\n\t    this.startColumn = this.tokenizer.column;\n\t  },\n\t\n\t  // Data\n\t\n\t  beginData: function beginData() {\n\t    this.token = {\n\t      type: 'Chars',\n\t      chars: ''\n\t    };\n\t    this.tokens.push(this.token);\n\t  },\n\t\n\t  appendToData: function appendToData(char) {\n\t    this.token.chars += char;\n\t  },\n\t\n\t  finishData: function finishData() {\n\t    this.addLocInfo();\n\t  },\n\t\n\t  // Comment\n\t\n\t  beginComment: function beginComment() {\n\t    this.token = {\n\t      type: 'Comment',\n\t      chars: ''\n\t    };\n\t    this.tokens.push(this.token);\n\t  },\n\t\n\t  appendToCommentData: function appendToCommentData(char) {\n\t    this.token.chars += char;\n\t  },\n\t\n\t  finishComment: function finishComment() {\n\t    this.addLocInfo();\n\t  },\n\t\n\t  // Tags - basic\n\t\n\t  beginStartTag: function beginStartTag() {\n\t    this.token = {\n\t      type: 'StartTag',\n\t      tagName: '',\n\t      attributes: [],\n\t      selfClosing: false\n\t    };\n\t    this.tokens.push(this.token);\n\t  },\n\t\n\t  beginEndTag: function beginEndTag() {\n\t    this.token = {\n\t      type: 'EndTag',\n\t      tagName: ''\n\t    };\n\t    this.tokens.push(this.token);\n\t  },\n\t\n\t  finishTag: function finishTag() {\n\t    this.addLocInfo();\n\t  },\n\t\n\t  markTagAsSelfClosing: function markTagAsSelfClosing() {\n\t    this.token.selfClosing = true;\n\t  },\n\t\n\t  // Tags - name\n\t\n\t  appendToTagName: function appendToTagName(char) {\n\t    this.token.tagName += char;\n\t  },\n\t\n\t  // Tags - attributes\n\t\n\t  beginAttribute: function beginAttribute() {\n\t    this._currentAttribute = [\"\", \"\", null];\n\t    this.token.attributes.push(this._currentAttribute);\n\t  },\n\t\n\t  appendToAttributeName: function appendToAttributeName(char) {\n\t    this._currentAttribute[0] += char;\n\t  },\n\t\n\t  beginAttributeValue: function beginAttributeValue(isQuoted) {\n\t    this._currentAttribute[2] = isQuoted;\n\t  },\n\t\n\t  appendToAttributeValue: function appendToAttributeValue(char) {\n\t    this._currentAttribute[1] = this._currentAttribute[1] || \"\";\n\t    this._currentAttribute[1] += char;\n\t  },\n\t\n\t  finishAttributeValue: function finishAttributeValue() {}\n\t};\n\t\n\texports.default = Tokenizer;\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.isSpace = isSpace;\n\texports.isAlpha = isAlpha;\n\texports.preprocessInput = preprocessInput;\n\tvar WSP = /[\\t\\n\\f ]/;\n\tvar ALPHA = /[A-Za-z]/;\n\tvar CRLF = /\\r\\n?/g;\n\t\n\tfunction isSpace(char) {\n\t  return WSP.test(char);\n\t}\n\t\n\tfunction isAlpha(char) {\n\t  return ALPHA.test(char);\n\t}\n\t\n\tfunction preprocessInput(input) {\n\t  return input.replace(CRLF, \"\\n\");\n\t}\n\n/***/ }),\n\n/***/ 483:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tconst Audio = __webpack_require__(!(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"../build/react-audioplayer.js\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\n\t\n\tmodule.exports = Audio;\n\n\n/***/ }),\n\n/***/ 117:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(9);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\n\tvar __disqusAdded = false;\n\t\n\tfunction copyProps(context, props) {\n\t    var onNewComment = props.onNewComment,\n\t        language = props.language,\n\t        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\t\n\t    for (var prop in rest) {\n\t        context.page[prop] = rest[prop];\n\t    }\n\t\n\t    // Setting the language - if none is provided, the default one is used\n\t    context.language = language;\n\t\n\t    if (onNewComment) {\n\t        context.callbacks = {\n\t            onNewComment: [onNewComment]\n\t        };\n\t    }\n\t}\n\t\n\tvar DisqusThread = function (_React$Component) {\n\t    _inherits(DisqusThread, _React$Component);\n\t\n\t    function DisqusThread() {\n\t        _classCallCheck(this, DisqusThread);\n\t\n\t        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(DisqusThread, [{\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.loadDisqus();\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.loadDisqus();\n\t        }\n\t    }, {\n\t        key: 'shouldComponentUpdate',\n\t        value: function shouldComponentUpdate(nextProps, nextState) {\n\t            return nextProps.identifier !== this.props.identifier;\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var _this2 = this;\n\t\n\t            var props = Object.keys(this.props).reduce(function (memo, key) {\n\t                return DISQUS_CONFIG.some(function (config) {\n\t                    return config === key;\n\t                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n\t            }, {});\n\t\n\t            return _react2.default.createElement(\n\t                'div',\n\t                props,\n\t                _react2.default.createElement('div', { id: 'disqus_thread' })\n\t            );\n\t        }\n\t    }, {\n\t        key: 'addDisqusScript',\n\t        value: function addDisqusScript() {\n\t            if (__disqusAdded) {\n\t                return;\n\t            }\n\t\n\t            var child = this.disqus = document.createElement('script');\n\t            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\t\n\t            child.async = true;\n\t            child.type = 'text/javascript';\n\t            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\t\n\t            parent.appendChild(child);\n\t            __disqusAdded = true;\n\t        }\n\t    }, {\n\t        key: 'loadDisqus',\n\t        value: function loadDisqus() {\n\t            var _this3 = this;\n\t\n\t            var props = {};\n\t\n\t            // Extract Disqus props that were supplied to this component\n\t            DISQUS_CONFIG.forEach(function (prop) {\n\t                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n\t                if (prop !== 'shortname' && !!_this3.props[prop]) {\n\t                    props[prop] = _this3.props[prop];\n\t                }\n\t            });\n\t\n\t            // If Disqus has already been added, reset it\n\t            if (typeof DISQUS !== 'undefined') {\n\t                DISQUS.reset({\n\t                    reload: true,\n\t                    config: function config() {\n\t                        copyProps(this, props);\n\t\n\t                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n\t                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n\t                    }\n\t                });\n\t            } else {\n\t                // Otherwise add Disqus to the page\n\t                window.disqus_config = function () {\n\t                    copyProps(this, props);\n\t                };\n\t                this.addDisqusScript();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return DisqusThread;\n\t}(_react2.default.Component);\n\t\n\tDisqusThread.displayName = 'DisqusThread';\n\t\n\tDisqusThread.propTypes = {\n\t    id: _propTypes2.default.string,\n\t\n\t    /**\n\t     * `shortname` tells the Disqus service your forum's shortname,\n\t     * which is the unique identifier for your website as registered\n\t     * on Disqus. If undefined , the Disqus embed will not load.\n\t     */\n\t    shortname: _propTypes2.default.string.isRequired,\n\t\n\t    /**\n\t     * `identifier` tells the Disqus service how to identify the\n\t     * current page. When the Disqus embed is loaded, the identifier\n\t     * is used to look up the correct thread. If disqus_identifier\n\t     * is undefined, the page's URL will be used. The URL can be\n\t     * unreliable, such as when renaming an article slug or changing\n\t     * domains, so we recommend using your own unique way of\n\t     * identifying a thread.\n\t     */\n\t    identifier: _propTypes2.default.string,\n\t\n\t    /**\n\t     * `title` tells the Disqus service the title of the current page.\n\t     * This is used when creating the thread on Disqus for the first time.\n\t     * If undefined, Disqus will use the <title> attribute of the page.\n\t     * If that attribute could not be used, Disqus will use the URL of the page.\n\t     */\n\t    title: _propTypes2.default.string,\n\t\n\t    /**\n\t     * `url` tells the Disqus service the URL of the current page.\n\t     * If undefined, Disqus will take the window.location.href.\n\t     * This URL is used to look up or create a thread if disqus_identifier\n\t     * is undefined. In addition, this URL is always saved when a thread is\n\t     * being created so that Disqus knows what page a thread belongs to.\n\t     */\n\t    url: _propTypes2.default.string,\n\t\n\t    /**\n\t     * `category_id` tells the Disqus service the category to be used for\n\t     * the current page. This is used when creating the thread on Disqus\n\t     * for the first time.\n\t     */\n\t    category_id: _propTypes2.default.string,\n\t\n\t    /**\n\t     * `onNewComment` function accepts one parameter `comment` which is a\n\t     * JavaScript object with comment `id` and `text`. This allows you to track\n\t     * user comments and replies and run a script after a comment is posted.\n\t     */\n\t    onNewComment: _propTypes2.default.func,\n\t\n\t    /**\n\t     * `language` tells the Disqus service which language should be used.\n\t     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n\t     * If undefined, English is used as default one\n\t     */\n\t    language: _propTypes2.default.string\n\t};\n\t\n\tDisqusThread.defaultProps = {\n\t    url: typeof window === 'undefined' ? null : window.location.href\n\t};\n\t\n\texports.default = DisqusThread;\n\n/***/ }),\n\n/***/ 118:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(117);\n\n/***/ }),\n\n/***/ 138:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t;(function (name, root, factory) {\n\t  if (true) {\n\t    module.exports = factory()\n\t    module.exports['default'] = factory()\n\t  }\n\t  /* istanbul ignore next */\n\t  else if (typeof define === 'function' && define.amd) {\n\t    define(factory)\n\t  }\n\t  else {\n\t    root[name] = factory()\n\t  }\n\t}('slugify', this, function () {\n\t  /*eslint-disable */\n\t  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n\t  /*eslint-enable */\n\t\n\t  function replace (string, options) {\n\t    options = (typeof options === 'string')\n\t      ? {replacement: options}\n\t      : options || {}\n\t\n\t    string = string.split('')\n\t      .reduce(function (result, ch) {\n\t        if (charMap[ch]) {\n\t          ch = charMap[ch]\n\t        }\n\t        // allowed\n\t        ch = ch.replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n\t        result += ch\n\t        return result\n\t      }, '')\n\t      // trim leading/trailing spaces\n\t      .replace(/^\\s+|\\s+$/g, '')\n\t      // convert spaces\n\t      .replace(/[-\\s]+/g, options.replacement || '-')\n\t      // remove trailing separator\n\t      .replace('#{replacement}$', '')\n\t\n\t    return options.lower ? string.toLowerCase() : string\n\t  }\n\t\n\t  replace.extend = function (customMap) {\n\t    for (var key in customMap) {\n\t      charMap[key] = customMap[key]\n\t    }\n\t  }\n\t\n\t  return replace\n\t}))\n\n\n/***/ }),\n\n/***/ 79:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDisqusComments = __webpack_require__(118);\n\t\n\tvar _reactDisqusComments2 = _interopRequireDefault(_reactDisqusComments);\n\t\n\tvar _gatsbyConfig = __webpack_require__(78);\n\t\n\tvar _gatsbyConfig2 = _interopRequireDefault(_gatsbyConfig);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Disqus = function (_Component) {\n\t  _inherits(Disqus, _Component);\n\t\n\t  function Disqus(props) {\n\t    _classCallCheck(this, Disqus);\n\t\n\t    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\t\n\t    _this.state = { toasts: [] };\n\t    _this.notifyAboutComment = _this.notifyAboutComment.bind(_this);\n\t    _this.onSnackbarDismiss = _this.onSnackbarDismiss.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  Disqus.prototype.onSnackbarDismiss = function onSnackbarDismiss() {\n\t    var _state$toasts = this.state.toasts,\n\t        toasts = _state$toasts.slice(1);\n\t\n\t    this.setState({ toasts: toasts });\n\t  };\n\t\n\t  Disqus.prototype.notifyAboutComment = function notifyAboutComment() {\n\t    var toasts = this.state.toasts.slice();\n\t    toasts.push({ text: 'New comment available!!' });\n\t    this.setState({ toasts: toasts });\n\t  };\n\t\n\t  Disqus.prototype.render = function render() {\n\t    var postNode = this.props.postNode;\n\t\n\t    if (!_gatsbyConfig2.default.siteMetadata.disqusShortname) {\n\t      return null;\n\t    }\n\t\n\t    var post = postNode.frontmatter === undefined ? postNode : postNode.frontmatter;\n\t    var url = _gatsbyConfig2.default.siteMetadata.url + postNode.fields.slug;\n\t    return _react2.default.createElement(_reactDisqusComments2.default, {\n\t      shortname: _gatsbyConfig2.default.siteMetadata.disqusShortname,\n\t      identifier: post.title,\n\t      title: post.title,\n\t      url: url,\n\t      category_id: post.category_id,\n\t      onNewComment: this.notifyAboutComment\n\t    });\n\t  };\n\t\n\t  return Disqus;\n\t}(_react.Component);\n\t\n\texports.default = Disqus;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 222:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(13);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _moment = __webpack_require__(36);\n\t\n\tvar _moment2 = _interopRequireDefault(_moment);\n\t\n\tvar _Disqus = __webpack_require__(79);\n\t\n\tvar _Disqus2 = _interopRequireDefault(_Disqus);\n\t\n\tvar _slugify = __webpack_require__(138);\n\t\n\tvar _slugify2 = _interopRequireDefault(_slugify);\n\t\n\tvar _html = __webpack_require__(170);\n\t\n\tvar _html2 = _interopRequireDefault(_html);\n\t\n\tvar _reactAudioplayer = __webpack_require__(483);\n\t\n\tvar _reactAudioplayer2 = _interopRequireDefault(_reactAudioplayer);\n\t\n\t__webpack_require__(474);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar EpisodeTemplateDetails = function (_React$Component) {\n\t  _inherits(EpisodeTemplateDetails, _React$Component);\n\t\n\t  function EpisodeTemplateDetails() {\n\t    _classCallCheck(this, EpisodeTemplateDetails);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  EpisodeTemplateDetails.prototype.render = function render() {\n\t    var _props$data$site$site = this.props.data.site.siteMetadata,\n\t        subtitle = _props$data$site$site.subtitle,\n\t        author = _props$data$site$site.author;\n\t\n\t    var post = this.props.data.allPodcastFeedItem.edges[0].node;\n\t    post.fields = {};\n\t    post.fields.slug = (0, _slugify2.default)(post.title, { lower: true });\n\t\n\t    var playlist = [{ src: post.enclosure.url }];\n\t\n\t    var homeBlock = _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        _gatsbyLink2.default,\n\t        { className: 'post-single__home-button', to: '/' },\n\t        'All Articles'\n\t      )\n\t    );\n\t\n\t    var commentsBlock = _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(_Disqus2.default, { postNode: post })\n\t    );\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      homeBlock,\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'post-single' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'post-single__inner' },\n\t          _react2.default.createElement(\n\t            'h1',\n\t            { className: 'post-single__title' },\n\t            post.title\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'post-single__body' },\n\t            _react2.default.createElement(\n\t              'div',\n\t              { className: 'audio-container' },\n\t              _react2.default.createElement(_reactAudioplayer2.default, {\n\t                width: 600,\n\t                height: 200,\n\t                autoPlay: false,\n\t                playlist: playlist\n\t              })\n\t            ),\n\t            _react2.default.createElement('p', { dangerouslySetInnerHTML: { __html: (0, _html2.default)(post.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') } })\n\t          ),\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'post-single__date' },\n\t            _react2.default.createElement(\n\t              'em',\n\t              null,\n\t              'Published ',\n\t              (0, _moment2.default)(post.published).format('DD/MM/YYYY')\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'post-single__footer' },\n\t          _react2.default.createElement(\n\t            'p',\n\t            { className: 'post-single__footer-text' },\n\t            subtitle,\n\t            _react2.default.createElement(\n\t              'a',\n\t              { href: author.twitter, target: '_blank', rel: 'noopener noreferrer' },\n\t              _react2.default.createElement('br', null),\n\t              ' ',\n\t              _react2.default.createElement(\n\t                'strong',\n\t                null,\n\t                author.name\n\t              ),\n\t              ' on Twitter'\n\t            )\n\t          ),\n\t          commentsBlock\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return EpisodeTemplateDetails;\n\t}(_react2.default.Component);\n\t\n\texports.default = EpisodeTemplateDetails;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 234:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.pageQuery = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactHelmet = __webpack_require__(20);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _EpisodeTemplateDetails = __webpack_require__(222);\n\t\n\tvar _EpisodeTemplateDetails2 = _interopRequireDefault(_EpisodeTemplateDetails);\n\t\n\tvar _html = __webpack_require__(170);\n\t\n\tvar _html2 = _interopRequireDefault(_html);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar EpisodeTemplate = function (_React$Component) {\n\t  _inherits(EpisodeTemplate, _React$Component);\n\t\n\t  function EpisodeTemplate() {\n\t    _classCallCheck(this, EpisodeTemplate);\n\t\n\t    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n\t  }\n\t\n\t  EpisodeTemplate.prototype.render = function render() {\n\t    var _props$data$site$site = this.props.data.site.siteMetadata,\n\t        title = _props$data$site$site.title,\n\t        subtitle = _props$data$site$site.subtitle;\n\t\n\t    var post = this.props.data.allPodcastFeedItem;\n\t    var postTitle = post.edges[0].node.title;\n\t    var description = post.edges[0].node.description;\n\t    //const description = postDescription !== null ? postDescription : subtitle;\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        _reactHelmet2.default,\n\t        null,\n\t        _react2.default.createElement(\n\t          'title',\n\t          null,\n\t          postTitle + ' - ' + title\n\t        ),\n\t        _react2.default.createElement('meta', { name: 'description', content: description })\n\t      ),\n\t      _react2.default.createElement(_EpisodeTemplateDetails2.default, this.props)\n\t    );\n\t  };\n\t\n\t  return EpisodeTemplate;\n\t}(_react2.default.Component);\n\t\n\texports.default = EpisodeTemplate;\n\t\n\t// export const pageQuery = graphql`\n\t//   query PostBySlug($slug: String!) {\n\t//     site {\n\t//       siteMetadata {\n\t//         title\n\t//         subtitle\n\t//         copyright\n\t//         author {\n\t//           name\n\t//           twitter\n\t//         }\n\t//       }\n\t//     }\n\t//     markdownRemark(fields: { slug: { eq: $slug } }) {\n\t//       id\n\t//       html\n\t//       fields {\n\t//         tagSlugs\n\t//       }\n\t//       frontmatter {\n\t//         title\n\t//         tags\n\t//         date\n\t//         description\n\t//       }\n\t//     }\n\t//   }\n\t// `;\n\t\n\t\n\tvar pageQuery = exports.pageQuery = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-episode-template-jsx-edf0d4600b3b36cbe87e.js","module.exports = {\n  siteMetadata: {\n    url: 'https://lumen.netlify.com/',\n    title: 'Blog by John Doe',\n    subtitle: 'Pellentesque odio nisi, euismod in, pharetra a, ultricies in, diam. Sed arcu.',\n    copyright: '© All rights reserved.',\n    disqusShortname: '',\n    menu: [\n      {\n        label: 'Articles',\n        path: '/'\n      },\n      {\n        label: 'About me',\n        path: '/about/'\n      },\n      {\n        label: 'Contact me',\n        path: '/contact/'\n      }\n    ],\n    author: {\n      name: 'John Doe',\n      email: '#',\n      telegram: '#',\n      twitter: '#',\n      github: '#',\n      rss: '#',\n      vk: '#a',\n      ivoox: 'ivoox',\n      itunes: 'itunes',\n    }\n  },\n  pathPrefix: '/gatsby-starter-lumen-podcast',\n  plugins: [\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/src/pages`,\n        name: 'pages'\n      }\n    },\n    {\n      resolve: 'gatsby-source-feed',\n      options: {\n        feedURL: 'https://www.ivoox.com/podcast-1bit-memoria_fg_f1469800_filtro_1.xml'\n      }\n    },\n    {\n      resolve: 'gatsby-plugin-google-analytics',\n      options: { trackingId: '' }\n    },\n    {\n      resolve: 'gatsby-plugin-feed',\n      options: {\n        query: `\n          {\n            site {\n              siteMetadata {\n                url\n                title\n                subtitle\n              }\n            }\n          }\n        `,\n        feeds: [\n          {\n            serialize: ({ query: { site, allMarkdownRemark } }) => (\n              allMarkdownRemark.edges.map(edge =>\n                Object.assign({}, edge.node.frontmatter, {\n                  description: edge.node.frontmatter.description,\n                  date: edge.node.frontmatter.date,\n                  url: site.siteMetadata.url + edge.node.fields.slug,\n                  guid: site.siteMetadata.url + edge.node.fields.slug,\n                  custom_elements: [{ 'content:encoded': edge.node.html }]\n                }))\n            ),\n            query: `\n              {\n                allMarkdownRemark(\n                  limit: 1000,\n                  sort: { order: DESC, fields: [frontmatter___date] },\n                  filter: { frontmatter: { layout: { eq: \"post\" }, draft: { ne: true } } }\n                ) {\n                  edges {\n                    node {\n                      html\n                      fields {\n                        slug\n                      }\n                      frontmatter {\n                        title\n                        date\n                        layout\n                        draft\n                        description\n                      }\n                    }\n                  }\n                }\n              }\n            `,\n            output: '/rss.xml'\n          }\n        ]\n      }\n    },\n    {\n      resolve: 'gatsby-transformer-remark',\n      options: {\n        plugins: [\n          {\n            resolve: 'gatsby-remark-images',\n            options: {\n              maxWidth: 960\n            }\n          },\n          {\n            resolve: 'gatsby-remark-responsive-iframe',\n            options: { wrapperStyle: 'margin-bottom: 1.0725rem' }\n          },\n          'gatsby-remark-prismjs',\n          'gatsby-remark-copy-linked-files',\n          'gatsby-remark-smartypants'\n        ]\n      }\n    },\n    'gatsby-transformer-sharp',\n    'gatsby-plugin-sharp',\n    {\n      resolve: `gatsby-plugin-google-fonts`,\n      options: {\n        fonts: [`roboto\\:400,400i,500,700`]\n      }\n    },\n    {\n      resolve: 'gatsby-plugin-sitemap',\n      options: {\n        query: `\n            {\n              site {\n                siteMetadata {\n                  url\n                }\n              }\n              allSitePage(\n                filter: {\n                  path: { regex: \"/^(?!/404/|/404.html|/dev-404-page/)/\" }\n                }\n              ) {\n                edges {\n                  node {\n                    path\n                  }\n                }\n              }\n          }`,\n        output: '/sitemap.xml',\n        serialize: ({ site, allSitePage }) =>\n          allSitePage.edges.map((edge) => {\n            return {\n              url: site.siteMetadata.url + edge.node.path,\n              changefreq: 'daily',\n              priority: 0.7\n            };\n          })\n      }\n    },\n    'gatsby-plugin-offline',\n    'gatsby-plugin-catch-links',\n    'gatsby-plugin-react-helmet',\n    'gatsby-plugin-postcss-sass'\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./gatsby-config.js","module.exports = require('./lib/linkify-html').default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/html.js\n// module id = 170\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.default = linkifyHtml;\n\nvar _simpleHtmlTokenizer = require('./simple-html-tokenizer');\n\nvar _simpleHtmlTokenizer2 = _interopRequireDefault(_simpleHtmlTokenizer);\n\nvar _linkify = require('./linkify');\n\nvar linkify = _interopRequireWildcard(_linkify);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar options = linkify.options;\nvar Options = options.Options;\n\n\nvar StartTag = 'StartTag';\nvar EndTag = 'EndTag';\nvar Chars = 'Chars';\nvar Comment = 'Comment';\n\n/**\n\t`tokens` and `token` in this section refer to tokens generated by the HTML\n\tparser.\n*/\nfunction linkifyHtml(str) {\n\tvar opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\tvar tokens = _simpleHtmlTokenizer2.default.tokenize(str);\n\tvar linkifiedTokens = [];\n\tvar linkified = [];\n\tvar i;\n\n\topts = new Options(opts);\n\n\t// Linkify the tokens given by the parser\n\tfor (i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\n\t\tif (token.type === StartTag) {\n\t\t\tlinkifiedTokens.push(token);\n\n\t\t\t// Ignore all the contents of ignored tags\n\t\t\tvar tagName = token.tagName.toUpperCase();\n\t\t\tvar isIgnored = tagName === 'A' || options.contains(opts.ignoreTags, tagName);\n\t\t\tif (!isIgnored) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar preskipLen = linkifiedTokens.length;\n\t\t\tskipTagTokens(tagName, tokens, ++i, linkifiedTokens);\n\t\t\ti += linkifiedTokens.length - preskipLen - 1;\n\t\t\tcontinue;\n\t\t} else if (token.type !== Chars) {\n\t\t\t// Skip this token, it's not important\n\t\t\tlinkifiedTokens.push(token);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Valid text token, linkify it!\n\t\tvar linkifedChars = linkifyChars(token.chars, opts);\n\t\tlinkifiedTokens.push.apply(linkifiedTokens, linkifedChars);\n\t}\n\n\t// Convert the tokens back into a string\n\tfor (i = 0; i < linkifiedTokens.length; i++) {\n\t\tvar _token = linkifiedTokens[i];\n\t\tswitch (_token.type) {\n\t\t\tcase StartTag:\n\t\t\t\tvar link = '<' + _token.tagName;\n\t\t\t\tif (_token.attributes.length > 0) {\n\t\t\t\t\tvar attrs = attrsToStrings(_token.attributes);\n\t\t\t\t\tlink += ' ' + attrs.join(' ');\n\t\t\t\t}\n\t\t\t\tlink += '>';\n\t\t\t\tlinkified.push(link);\n\t\t\t\tbreak;\n\t\t\tcase EndTag:\n\t\t\t\tlinkified.push('</' + _token.tagName + '>');\n\t\t\t\tbreak;\n\t\t\tcase Chars:\n\t\t\t\tlinkified.push(escapeText(_token.chars));\n\t\t\t\tbreak;\n\t\t\tcase Comment:\n\t\t\t\tlinkified.push('<!--' + escapeText(_token.chars) + '-->');\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn linkified.join('');\n}\n\n/**\n\t`tokens` and `token` in this section referes to tokens returned by\n\t`linkify.tokenize`. `linkified` will contain HTML Parser-style tokens\n*/\nfunction linkifyChars(str, opts) {\n\tvar tokens = linkify.tokenize(str);\n\tvar result = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\n\t\tif (token.type === 'nl' && opts.nl2br) {\n\t\t\tresult.push({\n\t\t\t\ttype: StartTag,\n\t\t\t\ttagName: 'br',\n\t\t\t\tattributes: [],\n\t\t\t\tselfClosing: true\n\t\t\t});\n\t\t\tcontinue;\n\t\t} else if (!token.isLink || !opts.check(token)) {\n\t\t\tresult.push({ type: Chars, chars: token.toString() });\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar _opts$resolve = opts.resolve(token),\n\t\t    href = _opts$resolve.href,\n\t\t    formatted = _opts$resolve.formatted,\n\t\t    formattedHref = _opts$resolve.formattedHref,\n\t\t    tagName = _opts$resolve.tagName,\n\t\t    className = _opts$resolve.className,\n\t\t    target = _opts$resolve.target,\n\t\t    attributes = _opts$resolve.attributes;\n\n\t\t// Build up attributes\n\n\n\t\tvar attributeArray = [['href', formattedHref]];\n\n\t\tif (className) {\n\t\t\tattributeArray.push(['class', className]);\n\t\t}\n\n\t\tif (target) {\n\t\t\tattributeArray.push(['target', target]);\n\t\t}\n\n\t\tfor (var attr in attributes) {\n\t\t\tattributeArray.push([attr, attributes[attr]]);\n\t\t}\n\n\t\t// Add the required tokens\n\t\tresult.push({\n\t\t\ttype: StartTag,\n\t\t\ttagName: tagName,\n\t\t\tattributes: attributeArray,\n\t\t\tselfClosing: false\n\t\t});\n\t\tresult.push({ type: Chars, chars: formatted });\n\t\tresult.push({ type: EndTag, tagName: tagName });\n\t}\n\n\treturn result;\n}\n\n/**\n\tReturns a list of tokens skipped until the closing tag of tagName.\n\n\t* `tagName` is the closing tag which will prompt us to stop skipping\n\t* `tokens` is the array of tokens generated by HTML5Tokenizer which\n\t* `i` is the index immediately after the opening tag to skip\n\t* `skippedTokens` is an array which skipped tokens are being pushed into\n\n\tCaveats\n\n\t* Assumes that i is the first token after the given opening tagName\n\t* The closing tag will be skipped, but nothing after it\n\t* Will track whether there is a nested tag of the same type\n*/\nfunction skipTagTokens(tagName, tokens, i, skippedTokens) {\n\n\t// number of tokens of this type on the [fictional] stack\n\tvar stackCount = 1;\n\n\twhile (i < tokens.length && stackCount > 0) {\n\t\tvar token = tokens[i];\n\n\t\tif (token.type === StartTag && token.tagName.toUpperCase() === tagName) {\n\t\t\t// Nested tag of the same type, \"add to stack\"\n\t\t\tstackCount++;\n\t\t} else if (token.type === EndTag && token.tagName.toUpperCase() === tagName) {\n\t\t\t// Closing tag\n\t\t\tstackCount--;\n\t\t}\n\n\t\tskippedTokens.push(token);\n\t\ti++;\n\t}\n\n\t// Note that if stackCount > 0 here, the HTML is probably invalid\n\treturn skippedTokens;\n}\n\nfunction escapeText(text) {\n\t// Not required, HTML tokenizer ensures this occurs properly\n\treturn text;\n}\n\nfunction escapeAttr(attr) {\n\treturn attr.replace(/\"/g, '&quot;');\n}\n\nfunction attrsToStrings(attrs) {\n\tvar attrStrs = [];\n\tfor (var i = 0; i < attrs.length; i++) {\n\t\tvar _attrs$i = attrs[i],\n\t\t    name = _attrs$i[0],\n\t\t    value = _attrs$i[1];\n\n\t\tattrStrs.push(name + '=\"' + escapeAttr(value) + '\"');\n\t}\n\treturn attrStrs;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify-html.js\n// module id = 421\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.tokenize = exports.test = exports.scanner = exports.parser = exports.options = exports.inherits = exports.find = undefined;\n\nvar _class = require('./linkify/utils/class');\n\nvar _options = require('./linkify/utils/options');\n\nvar options = _interopRequireWildcard(_options);\n\nvar _scanner = require('./linkify/core/scanner');\n\nvar scanner = _interopRequireWildcard(_scanner);\n\nvar _parser = require('./linkify/core/parser');\n\nvar parser = _interopRequireWildcard(_parser);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nif (!Array.isArray) {\n\tArray.isArray = function (arg) {\n\t\treturn Object.prototype.toString.call(arg) === '[object Array]';\n\t};\n}\n\n/**\n\tConverts a string into tokens that represent linkable and non-linkable bits\n\t@method tokenize\n\t@param {String} str\n\t@return {Array} tokens\n*/\nvar tokenize = function tokenize(str) {\n\treturn parser.run(scanner.run(str));\n};\n\n/**\n\tReturns a list of linkable items in the given string.\n*/\nvar find = function find(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\tvar filtered = [];\n\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tif (token.isLink && (!type || token.type === type)) {\n\t\t\tfiltered.push(token.toObject());\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\n/**\n\tIs the given string valid linkable text of some sort\n\tNote that this does not trim the text for you.\n\n\tOptionally pass in a second `type` param, which is the type of link to test\n\tfor.\n\n\tFor example,\n\n\t\ttest(str, 'email');\n\n\tWill return `true` if str is a valid email.\n*/\nvar test = function test(str) {\n\tvar type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\tvar tokens = tokenize(str);\n\treturn tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].type === type);\n};\n\n// Scanner and parser provide states and tokens for the lexicographic stage\n// (will be used to add additional link types)\nexports.find = find;\nexports.inherits = _class.inherits;\nexports.options = options;\nexports.parser = parser;\nexports.scanner = scanner;\nexports.test = test;\nexports.tokenize = tokenize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify.js\n// module id = 422\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TEXT_TOKENS = _interopRequireWildcard(_text);\n\nvar _multi = require('./tokens/multi');\n\nvar MULTI_TOKENS = _interopRequireWildcard(_multi);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.TokenState(tokenClass);\n};\n\n// The universal starting state.\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/Email_address (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main parser\n*/\n\nvar S_START = makeState();\n\n// Intermediate states for URLs. Note that domains that begin with a protocol\n// are treated slighly differently from those that don't.\nvar S_PROTOCOL = makeState(); // e.g., 'http:'\nvar S_MAILTO = makeState(); // 'mailto:'\nvar S_PROTOCOL_SLASH = makeState(); // e.g., '/', 'http:/''\nvar S_PROTOCOL_SLASH_SLASH = makeState(); // e.g., '//', 'http://'\nvar S_DOMAIN = makeState(); // parsed string ends with a potential domain name (A)\nvar S_DOMAIN_DOT = makeState(); // (A) domain followed by DOT\nvar S_TLD = makeState(_multi.URL); // (A) Simplest possible URL with no query string\nvar S_TLD_COLON = makeState(); // (A) URL followed by colon (potential port number here)\nvar S_TLD_PORT = makeState(_multi.URL); // TLD followed by a port number\nvar S_URL = makeState(_multi.URL); // Long URL with optional port and maybe query string\nvar S_URL_NON_ACCEPTING = makeState(); // URL followed by some symbols (will not be part of the final URL)\nvar S_URL_OPENBRACE = makeState(); // URL followed by {\nvar S_URL_OPENBRACKET = makeState(); // URL followed by [\nvar S_URL_OPENANGLEBRACKET = makeState(); // URL followed by <\nvar S_URL_OPENPAREN = makeState(); // URL followed by (\nvar S_URL_OPENBRACE_Q = makeState(_multi.URL); // URL followed by { and some symbols that the URL can end it\nvar S_URL_OPENBRACKET_Q = makeState(_multi.URL); // URL followed by [ and some symbols that the URL can end it\nvar S_URL_OPENANGLEBRACKET_Q = makeState(_multi.URL); // URL followed by < and some symbols that the URL can end it\nvar S_URL_OPENPAREN_Q = makeState(_multi.URL); // URL followed by ( and some symbols that the URL can end it\nvar S_URL_OPENBRACE_SYMS = makeState(); // S_URL_OPENBRACE_Q followed by some symbols it cannot end it\nvar S_URL_OPENBRACKET_SYMS = makeState(); // S_URL_OPENBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENANGLEBRACKET_SYMS = makeState(); // S_URL_OPENANGLEBRACKET_Q followed by some symbols it cannot end it\nvar S_URL_OPENPAREN_SYMS = makeState(); // S_URL_OPENPAREN_Q followed by some symbols it cannot end it\nvar S_EMAIL_DOMAIN = makeState(); // parsed string starts with local email info + @ with a potential domain name (C)\nvar S_EMAIL_DOMAIN_DOT = makeState(); // (C) domain followed by DOT\nvar S_EMAIL = makeState(_multi.EMAIL); // (C) Possible email address (could have more tlds)\nvar S_EMAIL_COLON = makeState(); // (C) URL followed by colon (potential port number here)\nvar S_EMAIL_PORT = makeState(_multi.EMAIL); // (C) Email address with a port\nvar S_MAILTO_EMAIL = makeState(_multi.MAILTOEMAIL); // Email that begins with the mailto prefix (D)\nvar S_MAILTO_EMAIL_NON_ACCEPTING = makeState(); // (D) Followed by some non-query string chars\nvar S_LOCALPART = makeState(); // Local part of the email address\nvar S_LOCALPART_AT = makeState(); // Local part of the email address plus @\nvar S_LOCALPART_DOT = makeState(); // Local part of the email address plus '.' (localpart cannot end in .)\nvar S_NL = makeState(_multi.NL); // single new line\n\n// Make path from start to protocol (with '//')\nS_START.on(_text.NL, S_NL).on(_text.PROTOCOL, S_PROTOCOL).on(_text.MAILTO, S_MAILTO).on(_text.SLASH, S_PROTOCOL_SLASH);\n\nS_PROTOCOL.on(_text.SLASH, S_PROTOCOL_SLASH);\nS_PROTOCOL_SLASH.on(_text.SLASH, S_PROTOCOL_SLASH_SLASH);\n\n// The very first potential domain name\nS_START.on(_text.TLD, S_DOMAIN).on(_text.DOMAIN, S_DOMAIN).on(_text.LOCALHOST, S_TLD).on(_text.NUM, S_DOMAIN);\n\n// Force URL for protocol followed by anything sane\nS_PROTOCOL_SLASH_SLASH.on(_text.TLD, S_URL).on(_text.DOMAIN, S_URL).on(_text.NUM, S_URL).on(_text.LOCALHOST, S_URL);\n\n// Account for dots and hyphens\n// hyphens are usually parts of domain names\nS_DOMAIN.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL_DOMAIN.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Hyphen can jump back to a domain name\n\n// After the first domain and a dot, we can find either a URL or another domain\nS_DOMAIN_DOT.on(_text.TLD, S_TLD).on(_text.DOMAIN, S_DOMAIN).on(_text.NUM, S_DOMAIN).on(_text.LOCALHOST, S_DOMAIN);\n\nS_EMAIL_DOMAIN_DOT.on(_text.TLD, S_EMAIL).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.NUM, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL_DOMAIN);\n\n// S_TLD accepts! But the URL could be longer, try to find a match greedily\n// The `run` function should be able to \"rollback\" to the accepting state\nS_TLD.on(_text.DOT, S_DOMAIN_DOT);\nS_EMAIL.on(_text.DOT, S_EMAIL_DOMAIN_DOT);\n\n// Become real URLs after `SLASH` or `COLON NUM SLASH`\n// Here PSS and non-PSS converge\nS_TLD.on(_text.COLON, S_TLD_COLON).on(_text.SLASH, S_URL);\nS_TLD_COLON.on(_text.NUM, S_TLD_PORT);\nS_TLD_PORT.on(_text.SLASH, S_URL);\nS_EMAIL.on(_text.COLON, S_EMAIL_COLON);\nS_EMAIL_COLON.on(_text.NUM, S_EMAIL_PORT);\n\n// Types of characters the URL can definitely end in\nvar qsAccepting = [_text.DOMAIN, _text.AT, _text.LOCALHOST, _text.NUM, _text.PLUS, _text.POUND, _text.PROTOCOL, _text.SLASH, _text.TLD, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND];\n\n// Types of tokens that can follow a URL and be part of the query string\n// but cannot be the very last characters\n// Characters that cannot appear in the URL at all should be excluded\nvar qsNonAccepting = [_text.COLON, _text.DOT, _text.QUERY, _text.PUNCTUATION, _text.CLOSEBRACE, _text.CLOSEBRACKET, _text.CLOSEANGLEBRACKET, _text.CLOSEPAREN, _text.OPENBRACE, _text.OPENBRACKET, _text.OPENANGLEBRACKET, _text.OPENPAREN];\n\n// These states are responsible primarily for determining whether or not to\n// include the final round bracket.\n\n// URL, followed by an opening bracket\nS_URL.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// URL with extra symbols at the end, followed by an opening bracket\nS_URL_NON_ACCEPTING.on(_text.OPENBRACE, S_URL_OPENBRACE).on(_text.OPENBRACKET, S_URL_OPENBRACKET).on(_text.OPENANGLEBRACKET, S_URL_OPENANGLEBRACKET).on(_text.OPENPAREN, S_URL_OPENPAREN);\n\n// Closing bracket component. This character WILL be included in the URL\nS_URL_OPENBRACE.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_Q.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_Q.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_Q.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_Q.on(_text.CLOSEPAREN, S_URL);\nS_URL_OPENBRACE_SYMS.on(_text.CLOSEBRACE, S_URL);\nS_URL_OPENBRACKET_SYMS.on(_text.CLOSEBRACKET, S_URL);\nS_URL_OPENANGLEBRACKET_SYMS.on(_text.CLOSEANGLEBRACKET, S_URL);\nS_URL_OPENPAREN_SYMS.on(_text.CLOSEPAREN, S_URL);\n\n// URL that beings with an opening bracket, followed by a symbols.\n// Note that the final state can still be `S_URL_OPENBRACE_Q` (if the URL only\n// has a single opening bracket for some reason).\nS_URL_OPENBRACE.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// URL that begins with an opening bracket, followed by some symbols\nS_URL_OPENBRACE_Q.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_Q.on(qsNonAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_Q.on(qsNonAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_Q.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_Q.on(qsNonAccepting, S_URL_OPENPAREN_Q);\n\nS_URL_OPENBRACE_SYMS.on(qsAccepting, S_URL_OPENBRACE_Q);\nS_URL_OPENBRACKET_SYMS.on(qsAccepting, S_URL_OPENBRACKET_Q);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsAccepting, S_URL_OPENANGLEBRACKET_Q);\nS_URL_OPENPAREN_SYMS.on(qsAccepting, S_URL_OPENPAREN_Q);\nS_URL_OPENBRACE_SYMS.on(qsNonAccepting, S_URL_OPENBRACE_SYMS);\nS_URL_OPENBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENBRACKET_SYMS);\nS_URL_OPENANGLEBRACKET_SYMS.on(qsNonAccepting, S_URL_OPENANGLEBRACKET_SYMS);\nS_URL_OPENPAREN_SYMS.on(qsNonAccepting, S_URL_OPENPAREN_SYMS);\n\n// Account for the query string\nS_URL.on(qsAccepting, S_URL);\nS_URL_NON_ACCEPTING.on(qsAccepting, S_URL);\n\nS_URL.on(qsNonAccepting, S_URL_NON_ACCEPTING);\nS_URL_NON_ACCEPTING.on(qsNonAccepting, S_URL_NON_ACCEPTING);\n\n// Email address-specific state definitions\n// Note: We are not allowing '/' in email addresses since this would interfere\n// with real URLs\n\n// For addresses with the mailto prefix\n// 'mailto:' followed by anything sane is a valid email\nS_MAILTO.on(_text.TLD, S_MAILTO_EMAIL).on(_text.DOMAIN, S_MAILTO_EMAIL).on(_text.NUM, S_MAILTO_EMAIL).on(_text.LOCALHOST, S_MAILTO_EMAIL);\n\n// Greedily get more potential valid email values\nS_MAILTO_EMAIL.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\nS_MAILTO_EMAIL_NON_ACCEPTING.on(qsAccepting, S_MAILTO_EMAIL).on(qsNonAccepting, S_MAILTO_EMAIL_NON_ACCEPTING);\n\n// For addresses without the mailto prefix\n// Tokens allowed in the localpart of the email\nvar localpartAccepting = [_text.DOMAIN, _text.NUM, _text.PLUS, _text.POUND, _text.QUERY, _text.UNDERSCORE, _text.SYM, _text.AMPERSAND, _text.TLD];\n\n// Some of the tokens in `localpartAccepting` are already accounted for here and\n// will not be overwritten (don't worry)\nS_DOMAIN.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_TLD.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT);\nS_DOMAIN_DOT.on(localpartAccepting, S_LOCALPART);\n\n// Okay we're on a localpart. Now what?\n// TODO: IP addresses and what if the email starts with numbers?\nS_LOCALPART.on(localpartAccepting, S_LOCALPART).on(_text.AT, S_LOCALPART_AT) // close to an email address now\n.on(_text.DOT, S_LOCALPART_DOT);\nS_LOCALPART_DOT.on(localpartAccepting, S_LOCALPART);\nS_LOCALPART_AT.on(_text.TLD, S_EMAIL_DOMAIN).on(_text.DOMAIN, S_EMAIL_DOMAIN).on(_text.LOCALHOST, S_EMAIL);\n// States following `@` defined above\n\nvar run = function run(tokens) {\n\tvar len = tokens.length;\n\tvar cursor = 0;\n\tvar multis = [];\n\tvar textTokens = [];\n\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar multiLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && !(secondState = state.next(tokens[cursor]))) {\n\t\t\t// Starting tokens with nowhere to jump to.\n\t\t\t// Consider these to be just plain text\n\t\t\ttextTokens.push(tokens[cursor++]);\n\t\t}\n\n\t\twhile (cursor < len && (nextState = secondState || state.next(tokens[cursor]))) {\n\n\t\t\t// Get the next state\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\tcursor++;\n\t\t\tmultiLength++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\n\t\t\t// No accepting state was found, part of a regular text token\n\t\t\t// Add all the tokens we looked at to the text tokens array\n\t\t\tfor (var i = cursor - multiLength; i < cursor; i++) {\n\t\t\t\ttextTokens.push(tokens[i]);\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Accepting state!\n\n\t\t\t// First close off the textTokens (if available)\n\t\t\tif (textTokens.length > 0) {\n\t\t\t\tmultis.push(new _multi.TEXT(textTokens));\n\t\t\t\ttextTokens = [];\n\t\t\t}\n\n\t\t\t// Roll back to the latest accepting state\n\t\t\tcursor -= sinceAccepts;\n\t\t\tmultiLength -= sinceAccepts;\n\n\t\t\t// Create a new multitoken\n\t\t\tvar MULTI = latestAccepting.emit();\n\t\t\tmultis.push(new MULTI(tokens.slice(cursor - multiLength, cursor)));\n\t\t}\n\t}\n\n\t// Finally close off the textTokens (if available)\n\tif (textTokens.length > 0) {\n\t\tmultis.push(new _multi.TEXT(textTokens));\n\t}\n\n\treturn multis;\n};\n\nexports.State = _state.TokenState;\nexports.TOKENS = MULTI_TOKENS;\nexports.run = run;\nexports.start = S_START;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/parser.js\n// module id = 423\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.start = exports.run = exports.TOKENS = exports.State = undefined;\n\nvar _state = require('./state');\n\nvar _text = require('./tokens/text');\n\nvar TOKENS = _interopRequireWildcard(_text);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar tlds = 'aaa|aarp|abb|abbott|abogado|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|af|afl|ag|agency|ai|aig|airforce|airtel|al|alibaba|alipay|allfinanz|alsace|am|amica|amsterdam|an|analytics|android|ao|apartments|app|apple|aq|aquarelle|ar|aramco|archi|army|arpa|arte|as|asia|associates|at|attorney|au|auction|audi|audio|author|auto|autos|avianca|aw|ax|axa|az|azure|ba|baidu|band|bank|bar|barcelona|barclaycard|barclays|bargains|bauhaus|bayern|bb|bbc|bbva|bcg|bcn|bd|be|beats|beer|bentley|berlin|best|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bom|bond|boo|book|boots|bosch|bostik|bot|boutique|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|camera|camp|cancerresearch|canon|capetown|capital|car|caravan|cards|care|career|careers|cars|cartier|casa|cash|casino|cat|catering|cba|cbn|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chloe|christmas|chrome|church|ci|cipriani|circle|cisco|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|date|dating|datsun|day|dclk|de|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|diamonds|diet|digital|direct|directory|discount|dj|dk|dm|dnp|do|docs|dog|doha|domains|download|drive|dubai|durban|dvag|dz|earth|eat|ec|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epson|equipment|er|erni|es|esq|estate|et|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|fage|fail|fairwinds|faith|family|fan|fans|farm|fashion|fast|feedback|ferrero|fi|film|final|finance|financial|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|florist|flowers|flsmidth|fly|fm|fo|foo|football|ford|forex|forsale|forum|foundation|fox|fr|fresenius|frl|frogans|frontier|fund|furniture|futbol|fyi|ga|gal|gallery|gallup|game|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|gold|goldpoint|golf|goo|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|group|gs|gt|gu|gucci|guge|guide|guitars|guru|gw|gy|hamburg|hangout|haus|hdfcbank|health|healthcare|help|helsinki|here|hermes|hiphop|hitachi|hiv|hk|hm|hn|hockey|holdings|holiday|homedepot|homes|honda|horse|host|hosting|hoteles|hotmail|house|how|hr|hsbc|ht|hu|hyundai|ibm|icbc|ice|icu|id|ie|ifm|iinet|il|im|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|international|investments|io|ipiranga|iq|ir|irish|is|iselect|ist|istanbul|it|itau|iwc|jaguar|java|jcb|je|jetzt|jewelry|jlc|jll|jm|jmp|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kitchen|kiwi|km|kn|koeln|komatsu|kp|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|lamborghini|lamer|lancaster|land|landrover|lanxess|lasalle|lat|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|legal|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|limited|limo|lincoln|linde|link|live|living|lixil|lk|loan|loans|local|locus|lol|london|lotte|lotto|love|lr|ls|lt|ltd|ltda|lu|lupin|luxe|luxury|lv|ly|ma|madrid|maif|maison|makeup|man|management|mango|market|marketing|markets|marriott|mba|mc|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|mg|mh|miami|microsoft|mil|mini|mk|ml|mm|mma|mn|mo|mobi|mobily|moda|moe|moi|mom|monash|money|montblanc|mormon|mortgage|moscow|motorcycles|mov|movie|movistar|mp|mq|mr|ms|mt|mtn|mtpc|mtr|mu|museum|mutuelle|mv|mw|mx|my|mz|na|nadex|nagoya|name|natura|navy|nc|ne|nec|net|netbank|network|neustar|new|news|nexus|nf|ng|ngo|nhk|ni|nico|nikon|ninja|nissan|nl|no|nokia|norton|nowruz|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|office|okinawa|om|omega|one|ong|onl|online|ooo|oracle|orange|org|organic|origins|osaka|otsuka|ovh|pa|page|pamperedchef|panerai|paris|pars|partners|parts|party|passagens|pe|pet|pf|pg|ph|pharmacy|philips|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pohl|poker|porn|post|pr|praxi|press|pro|prod|productions|prof|promo|properties|property|protection|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|racing|re|read|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|ricoh|rio|rip|ro|rocher|rocks|rodeo|room|rs|rsvp|ru|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|saxo|sb|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scor|scot|sd|se|seat|security|seek|select|sener|services|seven|sew|sex|sexy|sfr|sg|sh|sharp|shell|shia|shiksha|shoes|show|shriram|si|singles|site|sj|sk|ski|skin|sky|skype|sl|sm|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|st|stada|star|starhub|statefarm|statoil|stc|stcgroup|stockholm|storage|store|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|taobao|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|team|tech|technology|tel|telecity|telefonica|temasek|tennis|tf|tg|th|thd|theater|theatre|tickets|tienda|tiffany|tips|tires|tirol|tj|tk|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tp|tr|trade|trading|training|travel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubs|ug|uk|unicom|university|uno|uol|us|uy|uz|va|vacations|vana|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|viking|villas|vin|vip|virgin|vision|vista|vistaprint|viva|vlaanderen|vn|vodka|volkswagen|vote|voting|voto|voyage|vu|vuelos|wales|walter|wang|wanggou|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|wme|wolterskluwer|work|works|world|ws|wtc|wtf|xbox|xerox|xin|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|youtube|yt|za|zara|zero|zip|zm|zone|zuerich|zw'.split('|'); // macro, see gulpfile.js\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n\n\t@module linkify\n\t@submodule scanner\n\t@main scanner\n*/\n\nvar NUMBERS = '0123456789'.split('');\nvar ALPHANUM = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');\nvar WHITESPACE = [' ', '\\f', '\\r', '\\t', '\\v', '\\xA0', '\\u1680', '\\u180E']; // excluding line breaks\n\nvar domainStates = []; // states that jump to DOMAIN on /[a-z0-9]/\nvar makeState = function makeState(tokenClass) {\n\treturn new _state.CharacterState(tokenClass);\n};\n\n// Frequently used states\nvar S_START = makeState();\nvar S_NUM = makeState(_text.NUM);\nvar S_DOMAIN = makeState(_text.DOMAIN);\nvar S_DOMAIN_HYPHEN = makeState(); // domain followed by 1 or more hyphen characters\nvar S_WS = makeState(_text.WS);\n\n// States for special URL symbols\nS_START.on('@', makeState(_text.AT)).on('.', makeState(_text.DOT)).on('+', makeState(_text.PLUS)).on('#', makeState(_text.POUND)).on('?', makeState(_text.QUERY)).on('/', makeState(_text.SLASH)).on('_', makeState(_text.UNDERSCORE)).on(':', makeState(_text.COLON)).on('{', makeState(_text.OPENBRACE)).on('[', makeState(_text.OPENBRACKET)).on('<', makeState(_text.OPENANGLEBRACKET)).on('(', makeState(_text.OPENPAREN)).on('}', makeState(_text.CLOSEBRACE)).on(']', makeState(_text.CLOSEBRACKET)).on('>', makeState(_text.CLOSEANGLEBRACKET)).on(')', makeState(_text.CLOSEPAREN)).on('&', makeState(_text.AMPERSAND)).on([',', ';', '!', '\"', '\\''], makeState(_text.PUNCTUATION));\n\n// Whitespace jumps\n// Tokens of only non-newline whitespace are arbitrarily long\nS_START.on('\\n', makeState(_text.NL)).on(WHITESPACE, S_WS);\n\n// If any whitespace except newline, more whitespace!\nS_WS.on(WHITESPACE, S_WS);\n\n// Generates states for top-level domains\n// Note that this is most accurate when tlds are in alphabetical order\nfor (var i = 0; i < tlds.length; i++) {\n\tvar newStates = (0, _state.stateify)(tlds[i], S_START, _text.TLD, _text.DOMAIN);\n\tdomainStates.push.apply(domainStates, newStates);\n}\n\n// Collect the states generated by different protocls\nvar partialProtocolFileStates = (0, _state.stateify)('file', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolFtpStates = (0, _state.stateify)('ftp', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolHttpStates = (0, _state.stateify)('http', S_START, _text.DOMAIN, _text.DOMAIN);\nvar partialProtocolMailtoStates = (0, _state.stateify)('mailto', S_START, _text.DOMAIN, _text.DOMAIN);\n\n// Add the states to the array of DOMAINeric states\ndomainStates.push.apply(domainStates, partialProtocolFileStates);\ndomainStates.push.apply(domainStates, partialProtocolFtpStates);\ndomainStates.push.apply(domainStates, partialProtocolHttpStates);\n\n// Protocol states\nvar S_PROTOCOL_FILE = partialProtocolFileStates.pop();\nvar S_PROTOCOL_FTP = partialProtocolFtpStates.pop();\nvar S_PROTOCOL_HTTP = partialProtocolHttpStates.pop();\nvar S_MAILTO = partialProtocolMailtoStates.pop();\nvar S_PROTOCOL_SECURE = makeState(_text.DOMAIN);\nvar S_FULL_PROTOCOL = makeState(_text.PROTOCOL); // Full protocol ends with COLON\nvar S_FULL_MAILTO = makeState(_text.MAILTO); // Mailto ends with COLON\n\n// Secure protocols (end with 's')\nS_PROTOCOL_FTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\nS_PROTOCOL_HTTP.on('s', S_PROTOCOL_SECURE).on(':', S_FULL_PROTOCOL);\n\ndomainStates.push(S_PROTOCOL_SECURE);\n\n// Become protocol tokens after a COLON\nS_PROTOCOL_FILE.on(':', S_FULL_PROTOCOL);\nS_PROTOCOL_SECURE.on(':', S_FULL_PROTOCOL);\nS_MAILTO.on(':', S_FULL_MAILTO);\n\n// Localhost\nvar partialLocalhostStates = (0, _state.stateify)('localhost', S_START, _text.LOCALHOST, _text.DOMAIN);\ndomainStates.push.apply(domainStates, partialLocalhostStates);\n\n// Everything else\n// DOMAINs make more DOMAINs\n// Number and character transitions\nS_START.on(NUMBERS, S_NUM);\nS_NUM.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_NUM).on(ALPHANUM, S_DOMAIN); // number becomes DOMAIN\n\nS_DOMAIN.on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n\n// All the generated states should have a jump to DOMAIN\nfor (var _i = 0; _i < domainStates.length; _i++) {\n\tdomainStates[_i].on('-', S_DOMAIN_HYPHEN).on(ALPHANUM, S_DOMAIN);\n}\n\nS_DOMAIN_HYPHEN.on('-', S_DOMAIN_HYPHEN).on(NUMBERS, S_DOMAIN).on(ALPHANUM, S_DOMAIN);\n\n// Set default transition\nS_START.defaultTransition = makeState(_text.SYM);\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {String} str Input string to scan\n\t@return {Array} Array of TOKEN instances\n*/\nvar run = function run(str) {\n\n\t// The state machine only looks at lowercase strings.\n\t// This selective `toLowerCase` is used because lowercasing the entire\n\t// string causes the length and character position to vary in some in some\n\t// non-English strings. This happens only on V8-based runtimes.\n\tvar lowerStr = str.replace(/[A-Z]/g, function (c) {\n\t\treturn c.toLowerCase();\n\t});\n\tvar len = str.length;\n\tvar tokens = []; // return value\n\n\tvar cursor = 0;\n\n\t// Tokenize the string\n\twhile (cursor < len) {\n\t\tvar state = S_START;\n\t\tvar secondState = null;\n\t\tvar nextState = null;\n\t\tvar tokenLength = 0;\n\t\tvar latestAccepting = null;\n\t\tvar sinceAccepts = -1;\n\n\t\twhile (cursor < len && (nextState = state.next(lowerStr[cursor]))) {\n\t\t\tsecondState = null;\n\t\t\tstate = nextState;\n\n\t\t\t// Keep track of the latest accepting state\n\t\t\tif (state.accepts()) {\n\t\t\t\tsinceAccepts = 0;\n\t\t\t\tlatestAccepting = state;\n\t\t\t} else if (sinceAccepts >= 0) {\n\t\t\t\tsinceAccepts++;\n\t\t\t}\n\n\t\t\ttokenLength++;\n\t\t\tcursor++;\n\t\t}\n\n\t\tif (sinceAccepts < 0) {\n\t\t\tcontinue;\n\t\t} // Should never happen\n\n\t\t// Roll back to the latest accepting state\n\t\tcursor -= sinceAccepts;\n\t\ttokenLength -= sinceAccepts;\n\n\t\t// Get the class for the new token\n\t\tvar TOKEN = latestAccepting.emit(); // Current token class\n\n\t\t// No more jumps, just make a new token\n\t\ttokens.push(new TOKEN(str.substr(cursor - tokenLength, tokenLength)));\n\t}\n\n\treturn tokens;\n};\n\nvar start = S_START;\nexports.State = _state.CharacterState;\nexports.TOKENS = TOKENS;\nexports.run = run;\nexports.start = start;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/scanner.js\n// module id = 424\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.stateify = exports.TokenState = exports.CharacterState = undefined;\n\nvar _class = require('../utils/class');\n\nfunction createStateClass() {\n\treturn function (tClass) {\n\t\tthis.j = [];\n\t\tthis.T = tClass || null;\n\t};\n}\n\n/**\n\tA simple state machine that can emit token classes\n\n\tThe `j` property in this class refers to state jumps. It's a\n\tmultidimensional array where for each element:\n\n\t* index [0] is a symbol or class of symbols to transition to.\n\t* index [1] is a State instance which matches\n\n\tThe type of symbol will depend on the target implementation for this class.\n\tIn Linkify, we have a two-stage scanner. Each stage uses this state machine\n\tbut with a slighly different (polymorphic) implementation.\n\n\tThe `T` property refers to the token class.\n\n\tTODO: Can the `on` and `next` methods be combined?\n\n\t@class BaseState\n*/\nvar BaseState = createStateClass();\nBaseState.prototype = {\n\tdefaultTransition: false,\n\n\t/**\n \t@method constructor\n \t@param {Class} tClass Pass in the kind of token to emit if there are\n \t\tno jumps after this state and the state is accepting.\n */\n\n\t/**\n \tOn the given symbol(s), this machine should go to the given state\n \t\t@method on\n \t@param {Array|Mixed} symbol\n \t@param {BaseState} state Note that the type of this state should be the\n \t\tsame as the current instance (i.e., don't pass in a different\n \t\tsubclass)\n */\n\ton: function on(symbol, state) {\n\t\tif (symbol instanceof Array) {\n\t\t\tfor (var i = 0; i < symbol.length; i++) {\n\t\t\t\tthis.j.push([symbol[i], state]);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tthis.j.push([symbol, state]);\n\t\treturn this;\n\t},\n\n\n\t/**\n \tGiven the next item, returns next state for that item\n \t@method next\n \t@param {Mixed} item Should be an instance of the symbols handled by\n \t\tthis particular machine.\n \t@return {State} state Returns false if no jumps are available\n */\n\tnext: function next(item) {\n\t\tfor (var i = 0; i < this.j.length; i++) {\n\t\t\tvar jump = this.j[i];\n\t\t\tvar symbol = jump[0]; // Next item to check for\n\t\t\tvar state = jump[1]; // State to jump to if items match\n\n\t\t\t// compare item with symbol\n\t\t\tif (this.test(item, symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\t\t}\n\n\t\t// Nowhere left to jump!\n\t\treturn this.defaultTransition;\n\t},\n\n\n\t/**\n \tDoes this state accept?\n \t`true` only of `this.T` exists\n \t\t@method accepts\n \t@return {Boolean}\n */\n\taccepts: function accepts() {\n\t\treturn !!this.T;\n\t},\n\n\n\t/**\n \tDetermine whether a given item \"symbolizes\" the symbol, where symbol is\n \ta class of items handled by this state machine.\n \t\tThis method should be overriden in extended classes.\n \t\t@method test\n \t@param {Mixed} item Does this item match the given symbol?\n \t@param {Mixed} symbol\n \t@return {Boolean}\n */\n\ttest: function test(item, symbol) {\n\t\treturn item === symbol;\n\t},\n\n\n\t/**\n \tEmit the token for this State (just return it in this case)\n \tIf this emits a token, this instance is an accepting state\n \t@method emit\n \t@return {Class} T\n */\n\temit: function emit() {\n\t\treturn this.T;\n\t}\n};\n\n/**\n\tState machine for string-based input\n\n\t@class CharacterState\n\t@extends BaseState\n*/\nvar CharacterState = (0, _class.inherits)(BaseState, createStateClass(), {\n\t/**\n \tDoes the given character match the given character or regular\n \texpression?\n \t\t@method test\n \t@param {String} char\n \t@param {String|RegExp} charOrRegExp\n \t@return {Boolean}\n */\n\ttest: function test(character, charOrRegExp) {\n\t\treturn character === charOrRegExp || charOrRegExp instanceof RegExp && charOrRegExp.test(character);\n\t}\n});\n\n/**\n\tState machine for input in the form of TextTokens\n\n\t@class TokenState\n\t@extends BaseState\n*/\nvar TokenState = (0, _class.inherits)(BaseState, createStateClass(), {\n\n\t/**\n  * Similar to `on`, but returns the state the results in the transition from\n  * the given item\n  * @method jump\n  * @param {Mixed} item\n  * @param {Token} [token]\n  * @return state\n  */\n\tjump: function jump(token) {\n\t\tvar tClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n\t\tvar state = this.next(new token('')); // dummy temp token\n\t\tif (state === this.defaultTransition) {\n\t\t\t// Make a new state!\n\t\t\tstate = new this.constructor(tClass);\n\t\t\tthis.on(token, state);\n\t\t} else if (tClass) {\n\t\t\tstate.T = tClass;\n\t\t}\n\t\treturn state;\n\t},\n\n\n\t/**\n \tIs the given token an instance of the given token class?\n \t\t@method test\n \t@param {TextToken} token\n \t@param {Class} tokenClass\n \t@return {Boolean}\n */\n\ttest: function test(token, tokenClass) {\n\t\treturn token instanceof tokenClass;\n\t}\n});\n\n/**\n\tGiven a non-empty target string, generates states (if required) for each\n\tconsecutive substring of characters in str starting from the beginning of\n\tthe string. The final state will have a special value, as specified in\n\toptions. All other \"in between\" substrings will have a default end state.\n\n\tThis turns the state machine into a Trie-like data structure (rather than a\n\tintelligently-designed DFA).\n\n\tNote that I haven't really tried these with any strings other than\n\tDOMAIN.\n\n\t@param {String} str\n\t@param {CharacterState} start State to jump from the first character\n\t@param {Class} endToken Token class to emit when the given string has been\n\t\tmatched and no more jumps exist.\n\t@param {Class} defaultToken \"Filler token\", or which token type to emit when\n\t\twe don't have a full match\n\t@return {Array} list of newly-created states\n*/\nfunction stateify(str, start, endToken, defaultToken) {\n\tvar i = 0,\n\t    len = str.length,\n\t    state = start,\n\t    newStates = [],\n\t    nextState = void 0;\n\n\t// Find the next state without a jump to the next character\n\twhile (i < len && (nextState = state.next(str[i]))) {\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tif (i >= len) {\n\t\treturn [];\n\t} // no new tokens were added\n\n\twhile (i < len - 1) {\n\t\tnextState = new CharacterState(defaultToken);\n\t\tnewStates.push(nextState);\n\t\tstate.on(str[i], nextState);\n\t\tstate = nextState;\n\t\ti++;\n\t}\n\n\tnextState = new CharacterState(endToken);\n\tnewStates.push(nextState);\n\tstate.on(str[len - 1], nextState);\n\n\treturn newStates;\n}\n\nexports.CharacterState = CharacterState;\nexports.TokenState = TokenState;\nexports.stateify = stateify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/state.js\n// module id = 171\n// module chunks = 109236248213326","\"use strict\";\n\nexports.__esModule = true;\nfunction createTokenClass() {\n\treturn function (value) {\n\t\tif (value) {\n\t\t\tthis.v = value;\n\t\t}\n\t};\n}\n\nexports.createTokenClass = createTokenClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/tokens/create-token-class.js\n// module id = 172\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.URL = exports.TEXT = exports.NL = exports.EMAIL = exports.MAILTOEMAIL = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\nvar _text = require('./text');\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n// Is the given token a valid domain token?\n// Should nums be included here?\nfunction isDomainToken(token) {\n\treturn token instanceof _text.DOMAIN || token instanceof _text.TLD;\n}\n\n/**\n\tAbstract class used for manufacturing tokens of text tokens. That is rather\n\tthan the value for a token being a small string of text, it's value an array\n\tof text tokens.\n\n\tUsed for grouping together URLs, emails, hashtags, and other potential\n\tcreations.\n\n\t@class MultiToken\n\t@abstract\n*/\nvar MultiToken = (0, _createTokenClass.createTokenClass)();\n\nMultiToken.prototype = {\n\t/**\n \tString representing the type for this token\n \t@property type\n \t@default 'TOKEN'\n */\n\ttype: 'token',\n\n\t/**\n \tIs this multitoken a link?\n \t@property isLink\n \t@default false\n */\n\tisLink: false,\n\n\t/**\n \tReturn the string this token represents.\n \t@method toString\n \t@return {String}\n */\n\ttoString: function toString() {\n\t\tvar result = [];\n\t\tfor (var i = 0; i < this.v.length; i++) {\n\t\t\tresult.push(this.v[i].toString());\n\t\t}\n\t\treturn result.join('');\n\t},\n\n\n\t/**\n \tWhat should the value for this token be in the `href` HTML attribute?\n \tReturns the `.toString` value by default.\n \t\t@method toHref\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\treturn this.toString();\n\t},\n\n\n\t/**\n \tReturns a hash of relevant values for this token, which includes keys\n \t* type - Kind of token ('url', 'email', etc.)\n \t* value - Original text\n \t* href - The value that should be added to the anchor tag's href\n \t\tattribute\n \t\t@method toObject\n \t@param {String} [protocol] `'http'` by default\n \t@return {Object}\n */\n\ttoObject: function toObject() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\treturn {\n\t\t\ttype: this.type,\n\t\t\tvalue: this.toString(),\n\t\t\thref: this.toHref(protocol)\n\t\t};\n\t}\n};\n\n/**\n\tRepresents an arbitrarily mailto email address with the prefix included\n\t@class MAILTO\n\t@extends MultiToken\n*/\nvar MAILTOEMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true\n});\n\n/**\n\tRepresents a list of tokens making up a valid email address\n\t@class EMAIL\n\t@extends MultiToken\n*/\nvar EMAIL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'email',\n\tisLink: true,\n\ttoHref: function toHref() {\n\t\tvar tokens = this.v;\n\t\treturn 'mailto:' + this.toString();\n\t}\n});\n\n/**\n\tRepresents some plain text\n\t@class TEXT\n\t@extends MultiToken\n*/\nvar TEXT = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'text' });\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class NL\n\t@extends MultiToken\n*/\nvar NL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), { type: 'nl' });\n\n/**\n\tRepresents a list of tokens making up a valid URL\n\t@class URL\n\t@extends MultiToken\n*/\nvar URL = (0, _class.inherits)(MultiToken, (0, _createTokenClass.createTokenClass)(), {\n\ttype: 'url',\n\tisLink: true,\n\n\t/**\n \tLowercases relevant parts of the domain and adds the protocol if\n \trequired. Note that this will not escape unsafe HTML characters in the\n \tURL.\n \t\t@method href\n \t@param {String} protocol\n \t@return {String}\n */\n\ttoHref: function toHref() {\n\t\tvar protocol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http';\n\n\t\tvar hasProtocol = false;\n\t\tvar hasSlashSlash = false;\n\t\tvar tokens = this.v;\n\t\tvar result = [];\n\t\tvar i = 0;\n\n\t\t// Make the first part of the domain lowercase\n\t\t// Lowercase protocol\n\t\twhile (tokens[i] instanceof _text.PROTOCOL) {\n\t\t\thasProtocol = true;\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Skip slash-slash\n\t\twhile (tokens[i] instanceof _text.SLASH) {\n\t\t\thasSlashSlash = true;\n\t\t\tresult.push(tokens[i].toString());\n\t\t\ti++;\n\t\t}\n\n\t\t// Lowercase all other characters in the domain\n\t\twhile (isDomainToken(tokens[i])) {\n\t\t\tresult.push(tokens[i].toString().toLowerCase());\n\t\t\ti++;\n\t\t}\n\n\t\t// Leave all other characters as they were written\n\t\tfor (; i < tokens.length; i++) {\n\t\t\tresult.push(tokens[i].toString());\n\t\t}\n\n\t\tresult = result.join('');\n\n\t\tif (!(hasProtocol || hasSlashSlash)) {\n\t\t\tresult = protocol + '://' + result;\n\t\t}\n\n\t\treturn result;\n\t},\n\thasProtocol: function hasProtocol() {\n\t\treturn this.v[0] instanceof _text.PROTOCOL;\n\t}\n});\n\nexports.Base = MultiToken;\nexports.MAILTOEMAIL = MAILTOEMAIL;\nexports.EMAIL = EMAIL;\nexports.NL = NL;\nexports.TEXT = TEXT;\nexports.URL = URL;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/tokens/multi.js\n// module id = 425\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.AMPERSAND = exports.CLOSEPAREN = exports.CLOSEANGLEBRACKET = exports.CLOSEBRACKET = exports.CLOSEBRACE = exports.OPENPAREN = exports.OPENANGLEBRACKET = exports.OPENBRACKET = exports.OPENBRACE = exports.WS = exports.TLD = exports.SYM = exports.UNDERSCORE = exports.SLASH = exports.MAILTO = exports.PROTOCOL = exports.QUERY = exports.POUND = exports.PLUS = exports.NUM = exports.NL = exports.LOCALHOST = exports.PUNCTUATION = exports.DOT = exports.COLON = exports.AT = exports.DOMAIN = exports.Base = undefined;\n\nvar _createTokenClass = require('./create-token-class');\n\nvar _class = require('../../utils/class');\n\n/******************************************************************************\n\tText Tokens\n\tTokens composed of strings\n******************************************************************************/\n\n/**\n\tAbstract class used for manufacturing text tokens.\n\tPass in the value this token represents\n\n\t@class TextToken\n\t@abstract\n*/\nvar TextToken = (0, _createTokenClass.createTokenClass)();\nTextToken.prototype = {\n\ttoString: function toString() {\n\t\treturn this.v + '';\n\t}\n};\n\nfunction inheritsToken(value) {\n\tvar props = value ? { v: value } : {};\n\treturn (0, _class.inherits)(TextToken, (0, _createTokenClass.createTokenClass)(), props);\n}\n\n/**\n\tA valid domain token\n\t@class DOMAIN\n\t@extends TextToken\n*/\nvar DOMAIN = inheritsToken();\n\n/**\n\t@class AT\n\t@extends TextToken\n*/\nvar AT = inheritsToken('@');\n\n/**\n\tRepresents a single colon `:` character\n\n\t@class COLON\n\t@extends TextToken\n*/\nvar COLON = inheritsToken(':');\n\n/**\n\t@class DOT\n\t@extends TextToken\n*/\nvar DOT = inheritsToken('.');\n\n/**\n\tA character class that can surround the URL, but which the URL cannot begin\n\tor end with. Does not include certain English punctuation like parentheses.\n\n\t@class PUNCTUATION\n\t@extends TextToken\n*/\nvar PUNCTUATION = inheritsToken();\n\n/**\n\tThe word localhost (by itself)\n\t@class LOCALHOST\n\t@extends TextToken\n*/\nvar LOCALHOST = inheritsToken();\n\n/**\n\tNewline token\n\t@class NL\n\t@extends TextToken\n*/\nvar NL = inheritsToken('\\n');\n\n/**\n\t@class NUM\n\t@extends TextToken\n*/\nvar NUM = inheritsToken();\n\n/**\n\t@class PLUS\n\t@extends TextToken\n*/\nvar PLUS = inheritsToken('+');\n\n/**\n\t@class POUND\n\t@extends TextToken\n*/\nvar POUND = inheritsToken('#');\n\n/**\n\tRepresents a web URL protocol. Supported types include\n\n\t* `http:`\n\t* `https:`\n\t* `ftp:`\n\t* `ftps:`\n\n\t@class PROTOCOL\n\t@extends TextToken\n*/\nvar PROTOCOL = inheritsToken();\n\n/**\n\tRepresents the start of the email URI protocol\n\n\t@class MAILTO\n\t@extends TextToken\n*/\nvar MAILTO = inheritsToken('mailto:');\n\n/**\n\t@class QUERY\n\t@extends TextToken\n*/\nvar QUERY = inheritsToken('?');\n\n/**\n\t@class SLASH\n\t@extends TextToken\n*/\nvar SLASH = inheritsToken('/');\n\n/**\n\t@class UNDERSCORE\n\t@extends TextToken\n*/\nvar UNDERSCORE = inheritsToken('_');\n\n/**\n\tOne ore more non-whitespace symbol.\n\t@class SYM\n\t@extends TextToken\n*/\nvar SYM = inheritsToken();\n\n/**\n\t@class TLD\n\t@extends TextToken\n*/\nvar TLD = inheritsToken();\n\n/**\n\tRepresents a string of consecutive whitespace characters\n\n\t@class WS\n\t@extends TextToken\n*/\nvar WS = inheritsToken();\n\n/**\n\tOpening/closing bracket classes\n*/\n\nvar OPENBRACE = inheritsToken('{');\nvar OPENBRACKET = inheritsToken('[');\nvar OPENANGLEBRACKET = inheritsToken('<');\nvar OPENPAREN = inheritsToken('(');\nvar CLOSEBRACE = inheritsToken('}');\nvar CLOSEBRACKET = inheritsToken(']');\nvar CLOSEANGLEBRACKET = inheritsToken('>');\nvar CLOSEPAREN = inheritsToken(')');\n\nvar AMPERSAND = inheritsToken('&');\n\nexports.Base = TextToken;\nexports.DOMAIN = DOMAIN;\nexports.AT = AT;\nexports.COLON = COLON;\nexports.DOT = DOT;\nexports.PUNCTUATION = PUNCTUATION;\nexports.LOCALHOST = LOCALHOST;\nexports.NL = NL;\nexports.NUM = NUM;\nexports.PLUS = PLUS;\nexports.POUND = POUND;\nexports.QUERY = QUERY;\nexports.PROTOCOL = PROTOCOL;\nexports.MAILTO = MAILTO;\nexports.SLASH = SLASH;\nexports.UNDERSCORE = UNDERSCORE;\nexports.SYM = SYM;\nexports.TLD = TLD;\nexports.WS = WS;\nexports.OPENBRACE = OPENBRACE;\nexports.OPENBRACKET = OPENBRACKET;\nexports.OPENANGLEBRACKET = OPENANGLEBRACKET;\nexports.OPENPAREN = OPENPAREN;\nexports.CLOSEBRACE = CLOSEBRACE;\nexports.CLOSEBRACKET = CLOSEBRACKET;\nexports.CLOSEANGLEBRACKET = CLOSEANGLEBRACKET;\nexports.CLOSEPAREN = CLOSEPAREN;\nexports.AMPERSAND = AMPERSAND;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/core/tokens/text.js\n// module id = 101\n// module chunks = 109236248213326","\"use strict\";\n\nexports.__esModule = true;\nexports.inherits = inherits;\nfunction inherits(parent, child) {\n\tvar props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\tvar extended = Object.create(parent.prototype);\n\tfor (var p in props) {\n\t\textended[p] = props[p];\n\t}\n\textended.constructor = child;\n\tchild.prototype = extended;\n\treturn child;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/utils/class.js\n// module id = 67\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar defaults = {\n\tdefaultProtocol: 'http',\n\tevents: null,\n\tformat: noop,\n\tformatHref: noop,\n\tnl2br: false,\n\ttagName: 'a',\n\ttarget: typeToTarget,\n\tvalidate: true,\n\tignoreTags: [],\n\tattributes: null,\n\tclassName: 'linkified' };\n\nexports.defaults = defaults;\nexports.Options = Options;\nexports.contains = contains;\n\n\nfunction Options(opts) {\n\topts = opts || {};\n\n\tthis.defaultProtocol = opts.defaultProtocol || defaults.defaultProtocol;\n\tthis.events = opts.events || defaults.events;\n\tthis.format = opts.format || defaults.format;\n\tthis.formatHref = opts.formatHref || defaults.formatHref;\n\tthis.nl2br = opts.nl2br || defaults.nl2br;\n\tthis.tagName = opts.tagName || defaults.tagName;\n\tthis.target = opts.target || defaults.target;\n\tthis.validate = opts.validate || defaults.validate;\n\tthis.ignoreTags = [];\n\n\t// linkAttributes and linkClass is deprecated\n\tthis.attributes = opts.attributes || opts.linkAttributes || defaults.attributes;\n\tthis.className = opts.className || opts.linkClass || defaults.className;\n\n\t// Make all tags names upper case\n\n\tvar ignoredTags = opts.ignoreTags || defaults.ignoreTags;\n\tfor (var i = 0; i < ignoredTags.length; i++) {\n\t\tthis.ignoreTags.push(ignoredTags[i].toUpperCase());\n\t}\n}\n\nOptions.prototype = {\n\t/**\n  * Given the token, return all options for how it should be displayed\n  */\n\tresolve: function resolve(token) {\n\t\tvar href = token.toHref(this.defaultProtocol);\n\t\treturn {\n\t\t\tformatted: this.get('format', token.toString(), token),\n\t\t\tformattedHref: this.get('formatHref', href, token),\n\t\t\ttagName: this.get('tagName', href, token),\n\t\t\tclassName: this.get('className', href, token),\n\t\t\ttarget: this.get('target', href, token),\n\t\t\tevents: this.getObject('events', href, token),\n\t\t\tattributes: this.getObject('attributes', href, token)\n\t\t};\n\t},\n\n\n\t/**\n  * Returns true or false based on whether a token should be displayed as a\n  * link based on the user options. By default,\n  */\n\tcheck: function check(token) {\n\t\treturn this.get('validate', token.toString(), token);\n\t},\n\n\n\t// Private methods\n\n\t/**\n  * Resolve an option's value based on the value of the option and the given\n  * params.\n  * @param [String] key Name of option to use\n  * @param operator will be passed to the target option if it's method\n  * @param [MultiToken] token The token from linkify.tokenize\n  */\n\tget: function get(key, operator, token) {\n\t\tvar option = this[key];\n\n\t\tif (!option) {\n\t\t\treturn option;\n\t\t}\n\n\t\tswitch (typeof option === 'undefined' ? 'undefined' : _typeof(option)) {\n\t\t\tcase 'function':\n\t\t\t\treturn option(operator, token.type);\n\t\t\tcase 'object':\n\t\t\t\tvar optionValue = option[token.type] || defaults[key];\n\t\t\t\treturn typeof optionValue === 'function' ? optionValue(operator, token.type) : optionValue;\n\t\t}\n\n\t\treturn option;\n\t},\n\tgetObject: function getObject(key, operator, token) {\n\t\tvar option = this[key];\n\t\treturn typeof option === 'function' ? option(operator, token.type) : option;\n\t}\n};\n\n/**\n * Quick indexOf replacement for checking the ignoreTags option\n */\nfunction contains(arr, value) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (arr[i] === value) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction noop(val) {\n\treturn val;\n}\n\nfunction typeToTarget(href, type) {\n\treturn type === 'url' ? '_blank' : null;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/linkify/utils/options.js\n// module id = 426\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\n\nvar _html5NamedCharRefs = require('./simple-html-tokenizer/html5-named-char-refs');\n\nvar _html5NamedCharRefs2 = _interopRequireDefault(_html5NamedCharRefs);\n\nvar _entityParser = require('./simple-html-tokenizer/entity-parser');\n\nvar _entityParser2 = _interopRequireDefault(_entityParser);\n\nvar _eventedTokenizer = require('./simple-html-tokenizer/evented-tokenizer');\n\nvar _eventedTokenizer2 = _interopRequireDefault(_eventedTokenizer);\n\nvar _tokenizer = require('./simple-html-tokenizer/tokenizer');\n\nvar _tokenizer2 = _interopRequireDefault(_tokenizer);\n\nvar _tokenize = require('./simple-html-tokenizer/tokenize');\n\nvar _tokenize2 = _interopRequireDefault(_tokenize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HTML5Tokenizer = {\n\tHTML5NamedCharRefs: _html5NamedCharRefs2.default,\n\tEntityParser: _entityParser2.default,\n\tEventedTokenizer: _eventedTokenizer2.default,\n\tTokenizer: _tokenizer2.default,\n\ttokenize: _tokenize2.default\n};\n\nexports.default = HTML5Tokenizer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer.js\n// module id = 427\n// module chunks = 109236248213326","\"use strict\";\n\nexports.__esModule = true;\nfunction EntityParser(named) {\n  this.named = named;\n}\n\nvar HEXCHARCODE = /^#[xX]([A-Fa-f0-9]+)$/;\nvar CHARCODE = /^#([0-9]+)$/;\nvar NAMED = /^([A-Za-z0-9]+)$/;\n\nEntityParser.prototype.parse = function (entity) {\n  if (!entity) {\n    return;\n  }\n  var matches = entity.match(HEXCHARCODE);\n  if (matches) {\n    return \"&#x\" + matches[1] + \";\";\n  }\n  matches = entity.match(CHARCODE);\n  if (matches) {\n    return \"&#\" + matches[1] + \";\";\n  }\n  matches = entity.match(NAMED);\n  if (matches) {\n    return this.named[matches[1]] || \"&\" + matches[1] + \";\";\n  }\n};\n\nexports.default = EntityParser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/entity-parser.js\n// module id = 173\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('./utils');\n\nfunction EventedTokenizer(delegate, entityParser) {\n  this.delegate = delegate;\n  this.entityParser = entityParser;\n\n  this.state = null;\n  this.input = null;\n\n  this.index = -1;\n  this.line = -1;\n  this.column = -1;\n  this.tagLine = -1;\n  this.tagColumn = -1;\n\n  this.reset();\n}\n\nEventedTokenizer.prototype = {\n  reset: function reset() {\n    this.state = 'beforeData';\n    this.input = '';\n\n    this.index = 0;\n    this.line = 1;\n    this.column = 0;\n\n    this.tagLine = -1;\n    this.tagColumn = -1;\n\n    this.delegate.reset();\n  },\n\n  tokenize: function tokenize(input) {\n    this.reset();\n    this.tokenizePart(input);\n    this.tokenizeEOF();\n  },\n\n  tokenizePart: function tokenizePart(input) {\n    this.input += (0, _utils.preprocessInput)(input);\n\n    while (this.index < this.input.length) {\n      this.states[this.state].call(this);\n    }\n  },\n\n  tokenizeEOF: function tokenizeEOF() {\n    this.flushData();\n  },\n\n  flushData: function flushData() {\n    if (this.state === 'data') {\n      this.delegate.finishData();\n      this.state = 'beforeData';\n    }\n  },\n\n  peek: function peek() {\n    return this.input.charAt(this.index);\n  },\n\n  consume: function consume() {\n    var char = this.peek();\n\n    this.index++;\n\n    if (char === \"\\n\") {\n      this.line++;\n      this.column = 0;\n    } else {\n      this.column++;\n    }\n\n    return char;\n  },\n\n  consumeCharRef: function consumeCharRef() {\n    var endIndex = this.input.indexOf(';', this.index);\n    if (endIndex === -1) {\n      return;\n    }\n    var entity = this.input.slice(this.index, endIndex);\n    var chars = this.entityParser.parse(entity);\n    if (chars) {\n      var count = entity.length;\n      // consume the entity chars\n      while (count) {\n        this.consume();\n        count--;\n      }\n      // consume the `;`\n      this.consume();\n\n      return chars;\n    }\n  },\n\n  markTagStart: function markTagStart() {\n    // these properties to be removed in next major bump\n    this.tagLine = this.line;\n    this.tagColumn = this.column;\n\n    if (this.delegate.tagOpen) {\n      this.delegate.tagOpen();\n    }\n  },\n\n  states: {\n    beforeData: function beforeData() {\n      var char = this.peek();\n\n      if (char === \"<\") {\n        this.state = 'tagOpen';\n        this.markTagStart();\n        this.consume();\n      } else {\n        this.state = 'data';\n        this.delegate.beginData();\n      }\n    },\n\n    data: function data() {\n      var char = this.peek();\n\n      if (char === \"<\") {\n        this.delegate.finishData();\n        this.state = 'tagOpen';\n        this.markTagStart();\n        this.consume();\n      } else if (char === \"&\") {\n        this.consume();\n        this.delegate.appendToData(this.consumeCharRef() || \"&\");\n      } else {\n        this.consume();\n        this.delegate.appendToData(char);\n      }\n    },\n\n    tagOpen: function tagOpen() {\n      var char = this.consume();\n\n      if (char === \"!\") {\n        this.state = 'markupDeclaration';\n      } else if (char === \"/\") {\n        this.state = 'endTagOpen';\n      } else if ((0, _utils.isAlpha)(char)) {\n        this.state = 'tagName';\n        this.delegate.beginStartTag();\n        this.delegate.appendToTagName(char.toLowerCase());\n      }\n    },\n\n    markupDeclaration: function markupDeclaration() {\n      var char = this.consume();\n\n      if (char === \"-\" && this.input.charAt(this.index) === \"-\") {\n        this.consume();\n        this.state = 'commentStart';\n        this.delegate.beginComment();\n      }\n    },\n\n    commentStart: function commentStart() {\n      var char = this.consume();\n\n      if (char === \"-\") {\n        this.state = 'commentStartDash';\n      } else if (char === \">\") {\n        this.delegate.finishComment();\n        this.state = 'beforeData';\n      } else {\n        this.delegate.appendToCommentData(char);\n        this.state = 'comment';\n      }\n    },\n\n    commentStartDash: function commentStartDash() {\n      var char = this.consume();\n\n      if (char === \"-\") {\n        this.state = 'commentEnd';\n      } else if (char === \">\") {\n        this.delegate.finishComment();\n        this.state = 'beforeData';\n      } else {\n        this.delegate.appendToCommentData(\"-\");\n        this.state = 'comment';\n      }\n    },\n\n    comment: function comment() {\n      var char = this.consume();\n\n      if (char === \"-\") {\n        this.state = 'commentEndDash';\n      } else {\n        this.delegate.appendToCommentData(char);\n      }\n    },\n\n    commentEndDash: function commentEndDash() {\n      var char = this.consume();\n\n      if (char === \"-\") {\n        this.state = 'commentEnd';\n      } else {\n        this.delegate.appendToCommentData(\"-\" + char);\n        this.state = 'comment';\n      }\n    },\n\n    commentEnd: function commentEnd() {\n      var char = this.consume();\n\n      if (char === \">\") {\n        this.delegate.finishComment();\n        this.state = 'beforeData';\n      } else {\n        this.delegate.appendToCommentData(\"--\" + char);\n        this.state = 'comment';\n      }\n    },\n\n    tagName: function tagName() {\n      var char = this.consume();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.state = 'beforeAttributeName';\n      } else if (char === \"/\") {\n        this.state = 'selfClosingStartTag';\n      } else if (char === \">\") {\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.delegate.appendToTagName(char);\n      }\n    },\n\n    beforeAttributeName: function beforeAttributeName() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.consume();\n        return;\n      } else if (char === \"/\") {\n        this.state = 'selfClosingStartTag';\n        this.consume();\n      } else if (char === \">\") {\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.state = 'attributeName';\n        this.delegate.beginAttribute();\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      }\n    },\n\n    attributeName: function attributeName() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.state = 'afterAttributeName';\n        this.consume();\n      } else if (char === \"/\") {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.state = 'selfClosingStartTag';\n      } else if (char === \"=\") {\n        this.state = 'beforeAttributeValue';\n        this.consume();\n      } else if (char === \">\") {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.consume();\n        this.delegate.appendToAttributeName(char);\n      }\n    },\n\n    afterAttributeName: function afterAttributeName() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.consume();\n        return;\n      } else if (char === \"/\") {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.state = 'selfClosingStartTag';\n      } else if (char === \"=\") {\n        this.consume();\n        this.state = 'beforeAttributeValue';\n      } else if (char === \">\") {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.state = 'attributeName';\n        this.delegate.beginAttribute();\n        this.delegate.appendToAttributeName(char);\n      }\n    },\n\n    beforeAttributeValue: function beforeAttributeValue() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.consume();\n      } else if (char === '\"') {\n        this.state = 'attributeValueDoubleQuoted';\n        this.delegate.beginAttributeValue(true);\n        this.consume();\n      } else if (char === \"'\") {\n        this.state = 'attributeValueSingleQuoted';\n        this.delegate.beginAttributeValue(true);\n        this.consume();\n      } else if (char === \">\") {\n        this.delegate.beginAttributeValue(false);\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.state = 'attributeValueUnquoted';\n        this.delegate.beginAttributeValue(false);\n        this.consume();\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueDoubleQuoted: function attributeValueDoubleQuoted() {\n      var char = this.consume();\n\n      if (char === '\"') {\n        this.delegate.finishAttributeValue();\n        this.state = 'afterAttributeValueQuoted';\n      } else if (char === \"&\") {\n        this.delegate.appendToAttributeValue(this.consumeCharRef('\"') || \"&\");\n      } else {\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueSingleQuoted: function attributeValueSingleQuoted() {\n      var char = this.consume();\n\n      if (char === \"'\") {\n        this.delegate.finishAttributeValue();\n        this.state = 'afterAttributeValueQuoted';\n      } else if (char === \"&\") {\n        this.delegate.appendToAttributeValue(this.consumeCharRef(\"'\") || \"&\");\n      } else {\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    attributeValueUnquoted: function attributeValueUnquoted() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.state = 'beforeAttributeName';\n      } else if (char === \"&\") {\n        this.consume();\n        this.delegate.appendToAttributeValue(this.consumeCharRef(\">\") || \"&\");\n      } else if (char === \">\") {\n        this.delegate.finishAttributeValue();\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.consume();\n        this.delegate.appendToAttributeValue(char);\n      }\n    },\n\n    afterAttributeValueQuoted: function afterAttributeValueQuoted() {\n      var char = this.peek();\n\n      if ((0, _utils.isSpace)(char)) {\n        this.consume();\n        this.state = 'beforeAttributeName';\n      } else if (char === \"/\") {\n        this.consume();\n        this.state = 'selfClosingStartTag';\n      } else if (char === \">\") {\n        this.consume();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.state = 'beforeAttributeName';\n      }\n    },\n\n    selfClosingStartTag: function selfClosingStartTag() {\n      var char = this.peek();\n\n      if (char === \">\") {\n        this.consume();\n        this.delegate.markTagAsSelfClosing();\n        this.delegate.finishTag();\n        this.state = 'beforeData';\n      } else {\n        this.state = 'beforeAttributeName';\n      }\n    },\n\n    endTagOpen: function endTagOpen() {\n      var char = this.consume();\n\n      if ((0, _utils.isAlpha)(char)) {\n        this.state = 'tagName';\n        this.delegate.beginEndTag();\n        this.delegate.appendToTagName(char.toLowerCase());\n      }\n    }\n  }\n};\n\nexports.default = EventedTokenizer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/evented-tokenizer.js\n// module id = 174\n// module chunks = 109236248213326","\"use strict\";\n\nexports.__esModule = true;\nvar HTML5NamedCharRefs = {\n    // We don't need the complete named character reference because linkifyHtml\n    // does not modify the escape sequences. We do need &nbsp; so that\n    // whitespace is parsed properly. Other types of whitespace should already\n    // be accounted for\n    nbsp: \"\\xA0\"\n};\nexports.default = HTML5NamedCharRefs;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/html5-named-char-refs.js\n// module id = 175\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\nexports.default = tokenize;\n\nvar _tokenizer = require('./tokenizer');\n\nvar _tokenizer2 = _interopRequireDefault(_tokenizer);\n\nvar _entityParser = require('./entity-parser');\n\nvar _entityParser2 = _interopRequireDefault(_entityParser);\n\nvar _html5NamedCharRefs = require('./html5-named-char-refs');\n\nvar _html5NamedCharRefs2 = _interopRequireDefault(_html5NamedCharRefs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction tokenize(input, options) {\n  var tokenizer = new _tokenizer2.default(new _entityParser2.default(_html5NamedCharRefs2.default), options);\n  return tokenizer.tokenize(input);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/tokenize.js\n// module id = 428\n// module chunks = 109236248213326","'use strict';\n\nexports.__esModule = true;\n\nvar _eventedTokenizer = require('./evented-tokenizer');\n\nvar _eventedTokenizer2 = _interopRequireDefault(_eventedTokenizer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Tokenizer(entityParser, options) {\n  this.token = null;\n  this.startLine = 1;\n  this.startColumn = 0;\n  this.options = options || {};\n  this.tokenizer = new _eventedTokenizer2.default(this, entityParser);\n}\n\nTokenizer.prototype = {\n  tokenize: function tokenize(input) {\n    this.tokens = [];\n    this.tokenizer.tokenize(input);\n    return this.tokens;\n  },\n\n  tokenizePart: function tokenizePart(input) {\n    this.tokens = [];\n    this.tokenizer.tokenizePart(input);\n    return this.tokens;\n  },\n\n  tokenizeEOF: function tokenizeEOF() {\n    this.tokens = [];\n    this.tokenizer.tokenizeEOF();\n    return this.tokens[0];\n  },\n\n  reset: function reset() {\n    this.token = null;\n    this.startLine = 1;\n    this.startColumn = 0;\n  },\n\n  addLocInfo: function addLocInfo() {\n    if (this.options.loc) {\n      this.token.loc = {\n        start: {\n          line: this.startLine,\n          column: this.startColumn\n        },\n        end: {\n          line: this.tokenizer.line,\n          column: this.tokenizer.column\n        }\n      };\n    }\n    this.startLine = this.tokenizer.line;\n    this.startColumn = this.tokenizer.column;\n  },\n\n  // Data\n\n  beginData: function beginData() {\n    this.token = {\n      type: 'Chars',\n      chars: ''\n    };\n    this.tokens.push(this.token);\n  },\n\n  appendToData: function appendToData(char) {\n    this.token.chars += char;\n  },\n\n  finishData: function finishData() {\n    this.addLocInfo();\n  },\n\n  // Comment\n\n  beginComment: function beginComment() {\n    this.token = {\n      type: 'Comment',\n      chars: ''\n    };\n    this.tokens.push(this.token);\n  },\n\n  appendToCommentData: function appendToCommentData(char) {\n    this.token.chars += char;\n  },\n\n  finishComment: function finishComment() {\n    this.addLocInfo();\n  },\n\n  // Tags - basic\n\n  beginStartTag: function beginStartTag() {\n    this.token = {\n      type: 'StartTag',\n      tagName: '',\n      attributes: [],\n      selfClosing: false\n    };\n    this.tokens.push(this.token);\n  },\n\n  beginEndTag: function beginEndTag() {\n    this.token = {\n      type: 'EndTag',\n      tagName: ''\n    };\n    this.tokens.push(this.token);\n  },\n\n  finishTag: function finishTag() {\n    this.addLocInfo();\n  },\n\n  markTagAsSelfClosing: function markTagAsSelfClosing() {\n    this.token.selfClosing = true;\n  },\n\n  // Tags - name\n\n  appendToTagName: function appendToTagName(char) {\n    this.token.tagName += char;\n  },\n\n  // Tags - attributes\n\n  beginAttribute: function beginAttribute() {\n    this._currentAttribute = [\"\", \"\", null];\n    this.token.attributes.push(this._currentAttribute);\n  },\n\n  appendToAttributeName: function appendToAttributeName(char) {\n    this._currentAttribute[0] += char;\n  },\n\n  beginAttributeValue: function beginAttributeValue(isQuoted) {\n    this._currentAttribute[2] = isQuoted;\n  },\n\n  appendToAttributeValue: function appendToAttributeValue(char) {\n    this._currentAttribute[1] = this._currentAttribute[1] || \"\";\n    this._currentAttribute[1] += char;\n  },\n\n  finishAttributeValue: function finishAttributeValue() {}\n};\n\nexports.default = Tokenizer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/tokenizer.js\n// module id = 176\n// module chunks = 109236248213326","\"use strict\";\n\nexports.__esModule = true;\nexports.isSpace = isSpace;\nexports.isAlpha = isAlpha;\nexports.preprocessInput = preprocessInput;\nvar WSP = /[\\t\\n\\f ]/;\nvar ALPHA = /[A-Za-z]/;\nvar CRLF = /\\r\\n?/g;\n\nfunction isSpace(char) {\n  return WSP.test(char);\n}\n\nfunction isAlpha(char) {\n  return ALPHA.test(char);\n}\n\nfunction preprocessInput(input) {\n  return input.replace(CRLF, \"\\n\");\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/linkifyjs/lib/simple-html-tokenizer/utils.js\n// module id = 429\n// module chunks = 109236248213326","const Audio = require('../build/react-audioplayer.js');\n\nmodule.exports = Audio;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-audioplayer/lib/index.js\n// module id = 483\n// module chunks = 109236248213326","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-disqus-comments/build/components/DisqusThread.js\n// module id = 117\n// module chunks = 108009296967943 109236248213326","'use strict';\n\nmodule.exports = require('./components/DisqusThread');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-disqus-comments/build/main.js\n// module id = 118\n// module chunks = 108009296967943 109236248213326","\n;(function (name, root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n    module.exports['default'] = factory()\n  }\n  /* istanbul ignore next */\n  else if (typeof define === 'function' && define.amd) {\n    define(factory)\n  }\n  else {\n    root[name] = factory()\n  }\n}('slugify', this, function () {\n  /*eslint-disable */\n  var charMap = JSON.parse('{\"$\":\"dollar\",\"&\":\"and\",\"<\":\"less\",\">\":\"greater\",\"|\":\"or\",\"¢\":\"cent\",\"£\":\"pound\",\"¤\":\"currency\",\"¥\":\"yen\",\"©\":\"(c)\",\"ª\":\"a\",\"®\":\"(r)\",\"º\":\"o\",\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"Æ\":\"AE\",\"Ç\":\"C\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"Ð\":\"D\",\"Ñ\":\"N\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"Ý\":\"Y\",\"Þ\":\"TH\",\"ß\":\"ss\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"æ\":\"ae\",\"ç\":\"c\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"ð\":\"d\",\"ñ\":\"n\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"ý\":\"y\",\"þ\":\"th\",\"ÿ\":\"y\",\"Ā\":\"A\",\"ā\":\"a\",\"Ă\":\"A\",\"ă\":\"a\",\"Ą\":\"A\",\"ą\":\"a\",\"Ć\":\"C\",\"ć\":\"c\",\"Č\":\"C\",\"č\":\"c\",\"Ď\":\"D\",\"ď\":\"d\",\"Đ\":\"DJ\",\"đ\":\"dj\",\"Ē\":\"E\",\"ē\":\"e\",\"Ė\":\"E\",\"ė\":\"e\",\"Ę\":\"e\",\"ę\":\"e\",\"Ě\":\"E\",\"ě\":\"e\",\"Ğ\":\"G\",\"ğ\":\"g\",\"Ģ\":\"G\",\"ģ\":\"g\",\"Ĩ\":\"I\",\"ĩ\":\"i\",\"Ī\":\"i\",\"ī\":\"i\",\"Į\":\"I\",\"į\":\"i\",\"İ\":\"I\",\"ı\":\"i\",\"Ķ\":\"k\",\"ķ\":\"k\",\"Ļ\":\"L\",\"ļ\":\"l\",\"Ł\":\"L\",\"ł\":\"l\",\"Ń\":\"N\",\"ń\":\"n\",\"Ņ\":\"N\",\"ņ\":\"n\",\"Ň\":\"N\",\"ň\":\"n\",\"Ő\":\"O\",\"ő\":\"o\",\"Œ\":\"OE\",\"œ\":\"oe\",\"Ř\":\"R\",\"ř\":\"r\",\"Ś\":\"S\",\"ś\":\"s\",\"Ş\":\"S\",\"ş\":\"s\",\"Š\":\"S\",\"š\":\"s\",\"Ţ\":\"T\",\"ţ\":\"t\",\"Ť\":\"T\",\"ť\":\"t\",\"Ũ\":\"U\",\"ũ\":\"u\",\"Ū\":\"u\",\"ū\":\"u\",\"Ů\":\"U\",\"ů\":\"u\",\"Ű\":\"U\",\"ű\":\"u\",\"Ų\":\"U\",\"ų\":\"u\",\"Ź\":\"Z\",\"ź\":\"z\",\"Ż\":\"Z\",\"ż\":\"z\",\"Ž\":\"Z\",\"ž\":\"z\",\"ƒ\":\"f\",\"Ơ\":\"O\",\"ơ\":\"o\",\"Ư\":\"U\",\"ư\":\"u\",\"ǈ\":\"LJ\",\"ǉ\":\"lj\",\"ǋ\":\"NJ\",\"ǌ\":\"nj\",\"Ș\":\"S\",\"ș\":\"s\",\"Ț\":\"T\",\"ț\":\"t\",\"˚\":\"o\",\"Ά\":\"A\",\"Έ\":\"E\",\"Ή\":\"H\",\"Ί\":\"I\",\"Ό\":\"O\",\"Ύ\":\"Y\",\"Ώ\":\"W\",\"ΐ\":\"i\",\"Α\":\"A\",\"Β\":\"B\",\"Γ\":\"G\",\"Δ\":\"D\",\"Ε\":\"E\",\"Ζ\":\"Z\",\"Η\":\"H\",\"Θ\":\"8\",\"Ι\":\"I\",\"Κ\":\"K\",\"Λ\":\"L\",\"Μ\":\"M\",\"Ν\":\"N\",\"Ξ\":\"3\",\"Ο\":\"O\",\"Π\":\"P\",\"Ρ\":\"R\",\"Σ\":\"S\",\"Τ\":\"T\",\"Υ\":\"Y\",\"Φ\":\"F\",\"Χ\":\"X\",\"Ψ\":\"PS\",\"Ω\":\"W\",\"Ϊ\":\"I\",\"Ϋ\":\"Y\",\"ά\":\"a\",\"έ\":\"e\",\"ή\":\"h\",\"ί\":\"i\",\"ΰ\":\"y\",\"α\":\"a\",\"β\":\"b\",\"γ\":\"g\",\"δ\":\"d\",\"ε\":\"e\",\"ζ\":\"z\",\"η\":\"h\",\"θ\":\"8\",\"ι\":\"i\",\"κ\":\"k\",\"λ\":\"l\",\"μ\":\"m\",\"ν\":\"n\",\"ξ\":\"3\",\"ο\":\"o\",\"π\":\"p\",\"ρ\":\"r\",\"ς\":\"s\",\"σ\":\"s\",\"τ\":\"t\",\"υ\":\"y\",\"φ\":\"f\",\"χ\":\"x\",\"ψ\":\"ps\",\"ω\":\"w\",\"ϊ\":\"i\",\"ϋ\":\"y\",\"ό\":\"o\",\"ύ\":\"y\",\"ώ\":\"w\",\"Ё\":\"Yo\",\"Ђ\":\"DJ\",\"Є\":\"Ye\",\"І\":\"I\",\"Ї\":\"Yi\",\"Ј\":\"J\",\"Љ\":\"LJ\",\"Њ\":\"NJ\",\"Ћ\":\"C\",\"Џ\":\"DZ\",\"А\":\"A\",\"Б\":\"B\",\"В\":\"V\",\"Г\":\"G\",\"Д\":\"D\",\"Е\":\"E\",\"Ж\":\"Zh\",\"З\":\"Z\",\"И\":\"I\",\"Й\":\"J\",\"К\":\"K\",\"Л\":\"L\",\"М\":\"M\",\"Н\":\"N\",\"О\":\"O\",\"П\":\"P\",\"Р\":\"R\",\"С\":\"S\",\"Т\":\"T\",\"У\":\"U\",\"Ф\":\"F\",\"Х\":\"H\",\"Ц\":\"C\",\"Ч\":\"Ch\",\"Ш\":\"Sh\",\"Щ\":\"Sh\",\"Ъ\":\"U\",\"Ы\":\"Y\",\"Ь\":\"\",\"Э\":\"E\",\"Ю\":\"Yu\",\"Я\":\"Ya\",\"а\":\"a\",\"б\":\"b\",\"в\":\"v\",\"г\":\"g\",\"д\":\"d\",\"е\":\"e\",\"ж\":\"zh\",\"з\":\"z\",\"и\":\"i\",\"й\":\"j\",\"к\":\"k\",\"л\":\"l\",\"м\":\"m\",\"н\":\"n\",\"о\":\"o\",\"п\":\"p\",\"р\":\"r\",\"с\":\"s\",\"т\":\"t\",\"у\":\"u\",\"ф\":\"f\",\"х\":\"h\",\"ц\":\"c\",\"ч\":\"ch\",\"ш\":\"sh\",\"щ\":\"sh\",\"ъ\":\"u\",\"ы\":\"y\",\"ь\":\"\",\"э\":\"e\",\"ю\":\"yu\",\"я\":\"ya\",\"ё\":\"yo\",\"ђ\":\"dj\",\"є\":\"ye\",\"і\":\"i\",\"ї\":\"yi\",\"ј\":\"j\",\"љ\":\"lj\",\"њ\":\"nj\",\"ћ\":\"c\",\"џ\":\"dz\",\"Ґ\":\"G\",\"ґ\":\"g\",\"฿\":\"baht\",\"ა\":\"a\",\"ბ\":\"b\",\"გ\":\"g\",\"დ\":\"d\",\"ე\":\"e\",\"ვ\":\"v\",\"ზ\":\"z\",\"თ\":\"t\",\"ი\":\"i\",\"კ\":\"k\",\"ლ\":\"l\",\"მ\":\"m\",\"ნ\":\"n\",\"ო\":\"o\",\"პ\":\"p\",\"ჟ\":\"zh\",\"რ\":\"r\",\"ს\":\"s\",\"ტ\":\"t\",\"უ\":\"u\",\"ფ\":\"f\",\"ქ\":\"k\",\"ღ\":\"gh\",\"ყ\":\"q\",\"შ\":\"sh\",\"ჩ\":\"ch\",\"ც\":\"ts\",\"ძ\":\"dz\",\"წ\":\"ts\",\"ჭ\":\"ch\",\"ხ\":\"kh\",\"ჯ\":\"j\",\"ჰ\":\"h\",\"ẞ\":\"SS\",\"Ạ\":\"A\",\"ạ\":\"a\",\"Ả\":\"A\",\"ả\":\"a\",\"Ấ\":\"A\",\"ấ\":\"a\",\"Ầ\":\"A\",\"ầ\":\"a\",\"Ẩ\":\"A\",\"ẩ\":\"a\",\"Ẫ\":\"A\",\"ẫ\":\"a\",\"Ậ\":\"A\",\"ậ\":\"a\",\"Ắ\":\"A\",\"ắ\":\"a\",\"Ằ\":\"A\",\"ằ\":\"a\",\"Ẳ\":\"A\",\"ẳ\":\"a\",\"Ẵ\":\"A\",\"ẵ\":\"a\",\"Ặ\":\"A\",\"ặ\":\"a\",\"Ẹ\":\"E\",\"ẹ\":\"e\",\"Ẻ\":\"E\",\"ẻ\":\"e\",\"Ẽ\":\"E\",\"ẽ\":\"e\",\"Ế\":\"E\",\"ế\":\"e\",\"Ề\":\"E\",\"ề\":\"e\",\"Ể\":\"E\",\"ể\":\"e\",\"Ễ\":\"E\",\"ễ\":\"e\",\"Ệ\":\"E\",\"ệ\":\"e\",\"Ỉ\":\"I\",\"ỉ\":\"i\",\"Ị\":\"I\",\"ị\":\"i\",\"Ọ\":\"O\",\"ọ\":\"o\",\"Ỏ\":\"O\",\"ỏ\":\"o\",\"Ố\":\"O\",\"ố\":\"o\",\"Ồ\":\"O\",\"ồ\":\"o\",\"Ổ\":\"O\",\"ổ\":\"o\",\"Ỗ\":\"O\",\"ỗ\":\"o\",\"Ộ\":\"O\",\"ộ\":\"o\",\"Ớ\":\"O\",\"ớ\":\"o\",\"Ờ\":\"O\",\"ờ\":\"o\",\"Ở\":\"O\",\"ở\":\"o\",\"Ỡ\":\"O\",\"ỡ\":\"o\",\"Ợ\":\"O\",\"ợ\":\"o\",\"Ụ\":\"U\",\"ụ\":\"u\",\"Ủ\":\"U\",\"ủ\":\"u\",\"Ứ\":\"U\",\"ứ\":\"u\",\"Ừ\":\"U\",\"ừ\":\"u\",\"Ử\":\"U\",\"ử\":\"u\",\"Ữ\":\"U\",\"ữ\":\"u\",\"Ự\":\"U\",\"ự\":\"u\",\"Ỳ\":\"Y\",\"ỳ\":\"y\",\"Ỵ\":\"Y\",\"ỵ\":\"y\",\"Ỷ\":\"Y\",\"ỷ\":\"y\",\"Ỹ\":\"Y\",\"ỹ\":\"y\",\"‘\":\"\\'\",\"’\":\"\\'\",\"“\":\"\\\\\\\"\",\"”\":\"\\\\\\\"\",\"†\":\"+\",\"•\":\"*\",\"…\":\"...\",\"₠\":\"ecu\",\"₢\":\"cruzeiro\",\"₣\":\"french franc\",\"₤\":\"lira\",\"₥\":\"mill\",\"₦\":\"naira\",\"₧\":\"peseta\",\"₨\":\"rupee\",\"₩\":\"won\",\"₪\":\"new shequel\",\"₫\":\"dong\",\"€\":\"euro\",\"₭\":\"kip\",\"₮\":\"tugrik\",\"₯\":\"drachma\",\"₰\":\"penny\",\"₱\":\"peso\",\"₲\":\"guarani\",\"₳\":\"austral\",\"₴\":\"hryvnia\",\"₵\":\"cedi\",\"₹\":\"indian rupee\",\"₽\":\"russian ruble\",\"℠\":\"sm\",\"™\":\"tm\",\"∂\":\"d\",\"∆\":\"delta\",\"∑\":\"sum\",\"∞\":\"infinity\",\"♥\":\"love\",\"元\":\"yuan\",\"円\":\"yen\",\"﷼\":\"rial\"}')\n  /*eslint-enable */\n\n  function replace (string, options) {\n    options = (typeof options === 'string')\n      ? {replacement: options}\n      : options || {}\n\n    string = string.split('')\n      .reduce(function (result, ch) {\n        if (charMap[ch]) {\n          ch = charMap[ch]\n        }\n        // allowed\n        ch = ch.replace(options.remove || /[^\\w\\s$*_+~.()'\"!\\-:@]/g, '')\n        result += ch\n        return result\n      }, '')\n      // trim leading/trailing spaces\n      .replace(/^\\s+|\\s+$/g, '')\n      // convert spaces\n      .replace(/[-\\s]+/g, options.replacement || '-')\n      // remove trailing separator\n      .replace('#{replacement}$', '')\n\n    return options.lower ? string.toLowerCase() : string\n  }\n\n  replace.extend = function (customMap) {\n    for (var key in customMap) {\n      charMap[key] = customMap[key]\n    }\n  }\n\n  return replace\n}))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/slugify/index.js\n// module id = 138\n// module chunks = 109236248213326 213534597649335","import React, { Component } from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport config from '../../../gatsby-config';\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { toasts: [] };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: 'New comment available!!' });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.siteMetadata.disqusShortname) {\n      return null;\n    }\n\n    const post = (postNode.frontmatter === undefined) ? postNode : postNode.frontmatter;\n    const url = config.siteMetadata.url + postNode.fields.slug;\n    return (\n      <ReactDisqusComments\n        shortname={config.siteMetadata.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Disqus/Disqus.jsx","import React from 'react';\nimport Link from 'gatsby-link';\nimport moment from 'moment';\nimport Disqus from '../Disqus/Disqus';\nimport slugify from 'slugify';\nimport linkifyHtml from 'linkifyjs/html'\nimport Audio from 'react-audioplayer';\nimport './style.scss';\n\n\nclass EpisodeTemplateDetails extends React.Component {\n  render() {\n    const { subtitle, author } = this.props.data.site.siteMetadata;\n    const post = this.props.data.allPodcastFeedItem.edges[0].node;\n    post.fields = {};\n    post.fields.slug = slugify(post.title, {lower: true});\n\n    const playlist = [{src: post.enclosure.url}];\n\n    const homeBlock = (\n      <div>\n        <Link className=\"post-single__home-button\" to=\"/\">All Articles</Link>\n      </div>\n    );\n\n    const commentsBlock = (\n      <div>\n        <Disqus postNode={post} />\n      </div>\n    );\n\n    return (\n      <div>\n        {homeBlock}\n        <div className=\"post-single\">\n          <div className=\"post-single__inner\">\n            <h1 className=\"post-single__title\">{post.title}</h1>\n            <div className=\"post-single__body\">\n              <div className=\"audio-container\">\n              <Audio\n                width={600}\n                height={200}\n                autoPlay={false}\n                playlist={ playlist }\n              />\n              </div>\n              <p dangerouslySetInnerHTML={{ __html: linkifyHtml(post.description).replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') }} />\n            </div>\n            <div className=\"post-single__date\">\n              <em>Published {moment(post.published).format('DD/MM/YYYY')}</em>\n            </div>\n          </div>\n          <div className=\"post-single__footer\">\n            <p className=\"post-single__footer-text\">\n              {subtitle}\n              <a href={author.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                <br /> <strong>{author.name}</strong> on Twitter\n              </a>\n            </p>\n            {commentsBlock}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EpisodeTemplateDetails;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/EpisodeTemplateDetails/index.jsx","import React from 'react';\nimport Helmet from 'react-helmet';\nimport EpisodeTemplateDetails from '../components/EpisodeTemplateDetails';\nimport linkifyHtml from 'linkifyjs/html'\n\n\nclass EpisodeTemplate extends React.Component {\n  render() {\n    const { title, subtitle } = this.props.data.site.siteMetadata;\n    const post = this.props.data.allPodcastFeedItem;\n    const postTitle = post.edges[0].node.title;\n    const description = post.edges[0].node.description;\n    //const description = postDescription !== null ? postDescription : subtitle;\n\n    return (\n      <div>\n        <Helmet>\n          <title>{`${postTitle} - ${title}`}</title>\n          <meta name=\"description\" content={description} />\n        </Helmet>\n        <EpisodeTemplateDetails {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default EpisodeTemplate;\n\n// export const pageQuery = graphql`\n//   query PostBySlug($slug: String!) {\n//     site {\n//       siteMetadata {\n//         title\n//         subtitle\n//         copyright\n//         author {\n//           name\n//           twitter\n//         }\n//       }\n//     }\n//     markdownRemark(fields: { slug: { eq: $slug } }) {\n//       id\n//       html\n//       fields {\n//         tagSlugs\n//       }\n//       frontmatter {\n//         title\n//         tags\n//         date\n//         description\n//       }\n//     }\n//   }\n// `;\n\n\nexport const pageQuery = graphql`\n  query currentPostQuery($guid: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        author {\n          name\n          twitter\n        }\n      }\n    }\n    allPodcastFeedItem (limit: 1, filter: { guid: { eq: $guid } }){\n      edges {\n        node {\n          guid,\n          title,\n          description,\n          published,\n          link,\n          enclosure {\n            url,\n            filesize,\n            type\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n// WEBPACK FOOTER //\n// ./src/templates/episode-template.jsx"],"sourceRoot":""}